{"version":3,"sources":["views/ErrorView.js","components/layout/Main.js","contexts/AppContext.js","components/layout/Navbar.js","hooks/useCalculateSpacing.js","components/layout/Search.js","contexts/BoardCardContext.js","contexts/TaskViewContext.js","components/alerts/DeleteAlert.js","components/board/BoardCard.js","hooks/useIsCorrectBoardName.js","components/board/BoardCardEdit.js","components/board/BoardCardContainer.js","components/feedback/NotificationBar.js","components/board/AddBoardModal.js","redux/actions/actions.js","views/BoardsView.js","components/task/TypeTabsNavbar.js","components/task/EditTaskCard.js","components/task/TaskCardAction.js","components/task/TaskCard.js","components/task/TaskCardContainer.js","components/task/TaskCardEmpty.js","components/task/TypePanel.js","components/task/AddTaskModal.js","hooks/useSetUniqueId.js","views/TaskView.js","views/TaskViewContainer.js","views/InfoView.js","App.js","redux/reducers/AppReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["ErrorView","react_default","a","createElement","Main","_ref","children","classses","useStyles","className","main","Container","makeStyles","paddingTop","paddingBottom","AppContext","createContext","AppContextProvider","props","Provider","value","AdapterLink","React","forwardRef","ref","Link","Object","assign","innerRef","connect","classes","navbarTitle","useContext","HideOnScroll","AppBar","position","Toolbar","Grid","container","alignItems","justify","IconButton","color","component","to","Home_default","Typography","aria-label","Info_default","onClick","setIsOpenSearch","Search_default","trigger","useScrollTrigger","threshold","Slide","in","theme","paddingLeft","paddingRight","defineProperty","whiteSpace","maxWidth","textOverflow","overflow","breakpoints","up","useCalculateSpacing","useMediaQuery","Search","isOpenSearch","boards","_useState","useState","_useState2","slicedToArray","searchTxt","setSearchTxt","_useState3","_useState4","foundBoards","setFoundBoards","useEffect","handleCloseSearch","Dialog","fullScreen","open","onClose","TransitionComponent","Transition","appBar","Box","display","InputBase","autoFocus","input","placeholder","inputProps","onChange","e","target","filter","board","name","toUpperCase","indexOf","searchBoard","edge","Close_default","searchContent","spacing","length","map","key","item","xs","md","lg","pathname","concat","link","searchCard","direction","title","marginLeft","flex","backgroundColor","width","borderRadius","marginTop","padding","marginBottom","transition","&:hover","boxShadow","BoardCardContext","BoardCardContextProvider","TaskViewContext","TaskViewContextProvider","DeleteAlert","alertState","closeAlert","deleteTask","id","dialogContetText","dialogTitle","deleteItem","type","taskViewContext","boardCardContext","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","openNotificationBarStateBoard","handleNotificationBarMessageBoard","openNotificationBarState","handleNotificationBarMessage","boardName","handleDeleteItem","BoardCard","setAnchorEl","anchorEl","handleIsEdit","alert","setAlert","openMenu","Boolean","closeMenu","event","stopPropagation","preventDefault","deleteBoard","Card","card","CardHeader","action","currentTarget","MoreVert_default","icon","Menu","keepMounted","PaperProps","style","maxHeight","MenuItem","selected","card_mb","isUniqueName","arr","i","isCorrectName","isCorrect","useIsCorrectBoardName","state","AppReducer","setIsEdit","changeBoardName","cardName","setCardName","handleSubmit","handleHellperText","form","onSubmit","TextField","helperText","error","fullWidth","handleInput","Fab","size","fab","disabled","Check_default","fontSize","height","BoardCardContainer","isEdit","Fragment","board_BoardCardEdit","NotificationBar","closeFn","notificationBarMessage","breakPoint","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","SnackbarContent","snackbarContent","message","textTransform","createBoard","payload","handleClose","setValue","autoComplete","margin","withRouter","newName","isOpenModal","setIsOpenModal","notificationBarState","setNotificationBarState","_useState5","_useState6","setNotificationBarMessage","setNavbarTitle","objectSpread","emptyBoard","Add_default","board_AddBoardModal","&:last-child","bottom","left","transform","TypeTabsNavbar","tabIndex","handleChangeIndex","Tabs","variant","Tab","label","a11yProps","top","index","aria-controls","EditTaskCard","description","editTask","closeEditForm","titleInput","setTitleInput","descriptionInput","setDescriptionInput","CardContent","textField","handleTitleInput","TextareaAutosize","textArea","rows","rowsMax","handleDescriptionInput","confirmButton","button","startIcon","cancelButton","Clear_default","marginRight","TaskCardAction","openEditForm","openAlert","changeTypeTask","handleChangeTypeTask","options","inProgress","text","todo","done","buttonGroups","deleteButton","Delete_default","editButton","Edit_default","statusButton","aria-haspopup","endIcon","ArrowDropDown_default","TaskCard","cardContent","TaskCardEmpty","useTheme","inProgressTasks","toDoTasks","doneTasks","TabPanel","dir","mb","task","task_TaskCardContainer","other","objectWithoutProperties","role","hidden","createTask","openState","close","currentTasks","setTitle","setDescription","radioValue","setRadioValue","dialog","dialogContent","FormControl","formControl","FormLabel","RadioGroup","raddioGroup","FormControlLabel","control","Radio","btnGtoup","tasksArr","Math","max","apply","toConsumableArray","useSetUniqueId","border","flexDirection","justifyContent","setTabIndex","isModalOpen","setIsModalOpen","_useState7","_useState8","currentBoard","filterTypeTask","tasks","newValue","task_TypePanel","task_AddTaskModal","TaskViewContainer","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","boardTasks","isCorrectBorder","_this2","setState","match","params","findBoard","prevProps","_this3","_this4","Redirect","views_TaskView","Component","InfoView","box","Paper","paper","List","ListItem","HashRouter","layout_Navbar","layout_Main","Switch","Route","exact","path","BoardsView","layout_Search","testState","combineReducers","arguments","undefined","createStore","rootReducer","ReactDOM","render","es","store","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9af6772e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function ErrorView() {\r\n  return <h2>nie ma takiej strony</h2>;\r\n}\r\n","import React from \"react\";\r\nimport { Container, makeStyles } from \"@material-ui/core\";\r\n\r\nconst Main = ({ children }) => {\r\n  const classses = useStyles();\r\n  return (\r\n    <main className={classses.main}>\r\n      <Container>{children}</Container>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n\r\nconst useStyles = makeStyles({\r\n  main: {\r\n    paddingTop: \"90px\",\r\n    paddingBottom: \"20px\"\r\n  }\r\n});\r\n","import React, { createContext } from \"react\";\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport default function AppContextProvider(props) {\r\n  return (\r\n    <AppContext.Provider value={props.value}>\r\n      {props.children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Container,\r\n  Typography,\r\n  IconButton,\r\n  Grid,\r\n  useScrollTrigger,\r\n  Slide,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n\r\nconst AdapterLink = React.forwardRef((props, ref) => (\r\n  <Link innerRef={ref} {...props} />\r\n));\r\n\r\nfunction Navbar(props) {\r\n  const classes = useStyles();\r\n  const appContext = useContext(AppContext);\r\n  const { navbarTitle } = appContext;\r\n  return (\r\n    <HideOnScroll {...props}>\r\n      <AppBar position=\"fixed\">\r\n        <Container>\r\n          <Toolbar className={classes.Toolbar}>\r\n            <Grid container alignItems=\"center\" justify=\"space-between\">\r\n              <IconButton color=\"inherit\" component={AdapterLink} to=\"/\">\r\n                <HomeIcon />\r\n              </IconButton>\r\n              <Typography className={classes.navbarTitle}>\r\n                {navbarTitle}\r\n              </Typography>\r\n              <div>\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"link do strony informacyjnej\"\r\n                  component={AdapterLink}\r\n                  to=\"/informacje\"\r\n                >\r\n                  <InfoIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  onClick={() => props.setIsOpenSearch(true)}\r\n                  color=\"inherit\"\r\n                  aria-label=\"szukaj na stronie\"\r\n                >\r\n                  <SearchIcon />\r\n                </IconButton>\r\n              </div>\r\n            </Grid>\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </HideOnScroll>\r\n  );\r\n}\r\n\r\nexport default connect(null)(Navbar);\r\n\r\nfunction HideOnScroll(props) {\r\n  const trigger = useScrollTrigger({ threshold: 57 });\r\n  return <Slide in={!trigger}>{props.children}</Slide>;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  Toolbar: {\r\n    paddingLeft: \"0\",\r\n    paddingRight: \"0\"\r\n  },\r\n  navbarTitle: {\r\n    whiteSpace: \"nowrap\",\r\n    maxWidth: \"130px\",\r\n    textOverflow: \"ellipsis\",\r\n    overflow: \"hidden\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      maxWidth: \"400px\"\r\n    }\r\n  }\r\n}));\r\n","import { useMediaQuery } from \"@material-ui/core\";\r\n\r\nexport default function useCalculateSpacing() {\r\n  const md = useMediaQuery(\"(min-width:960px)\");\r\n  if (md) {\r\n    return 2;\r\n  } else {\r\n    return 0;\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Dialog,\r\n  AppBar,\r\n  Box,\r\n  IconButton,\r\n  InputBase,\r\n  Slide,\r\n  Container,\r\n  Grid,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\n\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport useCalculateSpacing from \"../../hooks/useCalculateSpacing\";\r\n\r\nfunction Search({ isOpenSearch, setIsOpenSearch, boards }) {\r\n  const [searchTxt, setSearchTxt] = useState(\"\");\r\n  const [foundBoards, setFoundBoards] = useState(boards);\r\n\r\n  useEffect(() => {\r\n    setFoundBoards(boards);\r\n  }, [boards]);\r\n\r\n  const searchBoard = e => {\r\n    setSearchTxt(e.target.value);\r\n    setFoundBoards(\r\n      boards.filter(\r\n        board =>\r\n          board.name.toUpperCase().indexOf(e.target.value.toUpperCase()) > -1\r\n      )\r\n    );\r\n  };\r\n  const classes = useStyles();\r\n  const handleCloseSearch = () => {\r\n    setIsOpenSearch(false);\r\n    setSearchTxt(\"\");\r\n    setFoundBoards(boards);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullScreen\r\n      open={isOpenSearch}\r\n      onClose={handleCloseSearch}\r\n      TransitionComponent={Transition}\r\n    >\r\n      <AppBar className={classes.appBar}>\r\n        <Container>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <InputBase\r\n              autoFocus={true}\r\n              className={classes.input}\r\n              placeholder=\"wpisz nazwe tablicy\"\r\n              inputProps={{ \"aria-label\": \"wpisz nazwe tablicy\" }}\r\n              value={searchTxt}\r\n              onChange={e => searchBoard(e)}\r\n            />\r\n            <IconButton\r\n              edge=\"end\"\r\n              color=\"inherit\"\r\n              onClick={handleCloseSearch}\r\n              aria-label=\"zamknij formularz wyszukiwania\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Container>\r\n      </AppBar>\r\n      <div className={classes.searchContent}>\r\n        <Container>\r\n          <Grid container spacing={useCalculateSpacing()}>\r\n            {foundBoards.length > 0 ? (\r\n              foundBoards.map(board => (\r\n                <Grid key={board.name} item xs={12} md={6} lg={4}>\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/tablice/${board.name}`\r\n                    }}\r\n                    className={classes.link}\r\n                    onClick={handleCloseSearch}\r\n                  >\r\n                    <div className={classes.searchCard}>{board.name}</div>\r\n                  </Link>\r\n                </Grid>\r\n              ))\r\n            ) : (\r\n              <Grid item xs={12}>\r\n                <div className={classes.searchCard}>nic nie znaleziono</div>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    position: \"relative\"\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1\r\n  },\r\n  input: {\r\n    backgroundColor: \"#ffffff\",\r\n    width: \"100%\",\r\n    paddingLeft: \"8px\",\r\n    borderRadius: \"4px\"\r\n  },\r\n  searchContent: {\r\n    marginTop: \"28px\"\r\n  },\r\n  searchCard: {\r\n    borderRadius: \"4px\",\r\n    backgroundColor: \"#ececec\",\r\n    padding: \"16px\"\r\n  },\r\n  link: {\r\n    display: \"block\",\r\n    marginBottom: \"20px\",\r\n    transition: \"box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n    \"&:hover\": {\r\n      boxShadow:\r\n        \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12);\"\r\n    }\r\n  }\r\n}));\r\n","import React, { createContext } from \"react\";\r\n\r\nexport const BoardCardContext = createContext();\r\n\r\nexport default function BoardCardContextProvider(props) {\r\n  return (\r\n    <BoardCardContext.Provider value={props.value}>\r\n      {props.children}\r\n    </BoardCardContext.Provider>\r\n  );\r\n}\r\n","import React, { createContext } from \"react\";\r\n\r\nexport const TaskViewContext = createContext();\r\n\r\nexport default function TaskViewContextProvider(props) {\r\n  return (\r\n    <TaskViewContext.Provider value={props.value}>\r\n      {props.children}\r\n    </TaskViewContext.Provider>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { TaskViewContext } from \"./../../contexts/TaskViewContext\";\r\nimport { BoardCardContext } from \"./../../contexts/BoardCardContext\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle\r\n} from \"@material-ui/core\";\r\n\r\nexport default function DeleteAlert({\r\n  alertState,\r\n  closeAlert,\r\n  deleteTask,\r\n  id,\r\n  dialogContetText,\r\n  dialogTitle,\r\n  deleteItem,\r\n  type\r\n}) {\r\n  const taskViewContext = useContext(TaskViewContext);\r\n  const boardCardContext = useContext(BoardCardContext);\r\n  const handleDeleteItem = e => {\r\n    if (type === \"board\") {\r\n      const {\r\n        openNotificationBarStateBoard,\r\n        handleNotificationBarMessageBoard,\r\n        name\r\n      } = boardCardContext;\r\n      deleteItem(name, e);\r\n      handleNotificationBarMessageBoard(\"Usunięto tablice\");\r\n      openNotificationBarStateBoard();\r\n    } else {\r\n      const {\r\n        openNotificationBarState,\r\n        handleNotificationBarMessage,\r\n        boardName\r\n      } = taskViewContext;\r\n      deleteTask(boardName, id);\r\n      handleNotificationBarMessage(\"Usunięto zadanie\");\r\n      openNotificationBarState();\r\n    }\r\n  };\r\n  return (\r\n    <Dialog\r\n      open={alertState}\r\n      onClose={closeAlert}\r\n      aria-labelledby={dialogContetText}\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{dialogTitle}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {dialogContetText}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={e => closeAlert(e)} color=\"primary\">\r\n          anuluj\r\n        </Button>\r\n        <Button onClick={e => handleDeleteItem(e)} color=\"secondary\">\r\n          usuń\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { BoardCardContext } from \"./../../contexts/BoardCardContext\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport DeleteAlert from \"./../../components/alerts/DeleteAlert\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function BoardCard({ setAnchorEl, anchorEl, handleIsEdit }) {\r\n  const classes = useStyles();\r\n  const [alert, setAlert] = useState(false);\r\n  const openMenu = Boolean(anchorEl);\r\n\r\n  const closeMenu = event => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    setAnchorEl(null);\r\n  };\r\n  const handleClick = event => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const openDeleteAlert = (name, event) => {\r\n    closeMenu(event);\r\n    setAlert(true);\r\n  };\r\n  const closeAlert = event => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    setAlert(false);\r\n  };\r\n  const handleDeleteBoard = (name, event) => {\r\n    deleteBoard(name);\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n  };\r\n  const boardCardContext = useContext(BoardCardContext);\r\n  const {\r\n    name,\r\n    openNotificationBarState,\r\n    handleNotificationBarMessage,\r\n    deleteBoard\r\n  } = boardCardContext;\r\n  return (\r\n    <Link to={`/tablice/${name}`}>\r\n      <Card className={classes.card}>\r\n        <CardHeader\r\n          title={name}\r\n          action={\r\n            <IconButton onClick={e => handleClick(e)} aria-label=\"settings\">\r\n              <MoreVertIcon className={classes.icon} />\r\n            </IconButton>\r\n          }\r\n        />\r\n        <Menu\r\n          id=\"long-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={openMenu}\r\n          onClose={e => closeMenu(e)}\r\n          PaperProps={{\r\n            style: {\r\n              maxHeight: 48 * 4.5,\r\n              width: 200\r\n            }\r\n          }}\r\n        >\r\n          <MenuItem\r\n            key={\"Usuń\"}\r\n            selected={\"Usuń\" === \"Pyxis\"}\r\n            onClick={e => openDeleteAlert(name, e)}\r\n          >\r\n            Usuń\r\n          </MenuItem>\r\n          <MenuItem\r\n            key={\"Edytuj\"}\r\n            selected={\"Edytuj\" === \"Pyxis\"}\r\n            onClick={e => handleIsEdit(e)}\r\n          >\r\n            Edytuj\r\n          </MenuItem>\r\n        </Menu>\r\n        <DeleteAlert\r\n          type={\"board\"}\r\n          alertState={alert}\r\n          closeAlert={closeAlert}\r\n          boardName={name}\r\n          deleteItem={handleDeleteBoard}\r\n          dialogTitle=\"Czy na pewno chcesz usunać tablice\"\r\n          dialogContetText={name}\r\n          openNotificationBarState={openNotificationBarState}\r\n          handleNotificationBarMessage={handleNotificationBarMessage}\r\n        />\r\n      </Card>\r\n    </Link>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    backgroundColor: \"#212121\",\r\n    color: \"#ffffff\",\r\n    \"&:hover\": {\r\n      boxShadow:\r\n        \"0px 4px 6px -1px rgba(0,0,0,0.9), 0px 6px 7px 0px rgba(0,0,0,0.75), 0px 3px 12px 0px rgba(0,0,0,0.65);\"\r\n    }\r\n  },\r\n  icon: {\r\n    color: \"#ffffff\"\r\n  },\r\n  card_mb: {\r\n    marginBottom: theme.spacing(4)\r\n  }\r\n}));\r\n","const isUniqueName = (arr, name) => {\r\n  for (let i = 0; i < arr.length; i++) {\r\n    if (name.toUpperCase() === arr[i].name.toUpperCase()) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\nconst isCorrectName = name => {\r\n  let isCorrect = true;\r\n  if (name.indexOf(\"/\") > -1) {\r\n    isCorrect = false;\r\n  }\r\n  if (name.indexOf(\"?\") > -1) {\r\n    isCorrect = false;\r\n  }\r\n  if (name.indexOf(\"%\") > -1) {\r\n    isCorrect = false;\r\n  }\r\n  return isCorrect;\r\n};\r\n\r\nexport default function useIsCorrectBoardName(arr, input) {\r\n  if (isUniqueName(arr, input) && isCorrectName(input)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BoardCardContext } from \"./../../contexts/BoardCardContext\";\r\nimport { Card, TextField, Fab, makeStyles } from \"@material-ui/core\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport useIsCorrectBoardName from \"./../../hooks/useIsCorrectBoardName\";\r\n\r\nfunction BoardCardEdit({ setIsEdit, boards }) {\r\n  const classes = useStyles();\r\n  const boardCardContext = useContext(BoardCardContext);\r\n  const { name, changeBoardName } = boardCardContext;\r\n\r\n  const [cardName, setCardName] = useState(name);\r\n  const handleInput = e => {\r\n    setCardName(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    if (name === cardName) {\r\n      changeBoardName(name, cardName);\r\n      setIsEdit(false);\r\n    }\r\n    if (useIsCorrectBoardName(boards, cardName) && cardName.length > 0) {\r\n      changeBoardName(name, cardName);\r\n      setIsEdit(false);\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleHellperText = () => {\r\n    if (name === cardName) {\r\n      return true;\r\n    } else {\r\n      if (useIsCorrectBoardName(boards, cardName) && cardName.length > 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <form className={classes.form} onSubmit={e => handleSubmit(e)}>\r\n        <TextField\r\n          placeholder=\"wpisz cos\"\r\n          helperText={handleHellperText() ? null : \"nieprawidłowa nazwa\"}\r\n          error={handleHellperText() ? false : true}\r\n          fullWidth\r\n          autoFocus={true}\r\n          value={cardName}\r\n          onChange={e => handleInput(e)}\r\n        />\r\n        <Fab\r\n          size=\"small\"\r\n          aria-label=\"potwierdz\"\r\n          className={classes.fab}\r\n          disabled={handleHellperText() ? false : true}\r\n          onClick={e => handleSubmit(e)}\r\n        >\r\n          <CheckIcon />\r\n        </Fab>\r\n      </form>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    boards: state.AppReducer.boards\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(BoardCardEdit);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    backgroundColor: \"#ffffff\",\r\n    fontSize: \"24px\"\r\n  },\r\n  card_mb: {\r\n    marginBottom: theme.spacing(4)\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: \"16px\",\r\n    color: \"#ffffff\"\r\n  },\r\n  fab: {\r\n    marginLeft: \"12px\",\r\n    backgroundColor: \"#00897b\",\r\n    width: \"36px\",\r\n    height: \"36px\",\r\n    color: \"#fff\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#00897b\"\r\n    }\r\n  }\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport BoardCard from \"./BoardCard\";\r\nimport BoardCardEdit from \"./BoardCardEdit\";\r\n\r\nexport default function BoardCardContainer() {\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const handleIsEdit = event => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    setAnchorEl(null);\r\n    setIsEdit(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isEdit ? (\r\n        <BoardCardEdit setIsEdit={setIsEdit} />\r\n      ) : (\r\n        <BoardCard\r\n          handleIsEdit={handleIsEdit}\r\n          setAnchorEl={setAnchorEl}\r\n          anchorEl={anchorEl}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  SnackbarContent,\r\n  Snackbar,\r\n  IconButton,\r\n  useMediaQuery,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nexport default function NotificationBar({\r\n  state,\r\n  closeFn,\r\n  notificationBarMessage\r\n}) {\r\n  const classes = useStyles();\r\n  const breakPoint = useMediaQuery(\"(min-width:600px)\");\r\n  return (\r\n    <Snackbar\r\n      open={state}\r\n      autoHideDuration={1500}\r\n      anchorOrigin={\r\n        breakPoint\r\n          ? { vertical: \"bottom\", horizontal: \"left\" }\r\n          : { vertical: \"top\", horizontal: \"center\" }\r\n      }\r\n      onClose={closeFn}\r\n    >\r\n      <SnackbarContent\r\n        className={classes.snackbarContent}\r\n        message={notificationBarMessage}\r\n        action={[\r\n          <IconButton\r\n            key=\"close\"\r\n            aria-label=\"close\"\r\n            color=\"inherit\"\r\n            onClick={closeFn}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ]}\r\n      />\r\n    </Snackbar>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  snackbarContent: {\r\n    backgroundColor: \"#347537\",\r\n    textTransform: \"uppercase\"\r\n  }\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createBoard } from \"../../redux/actions/actions\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogContentText,\r\n  TextField,\r\n  DialogActions,\r\n  DialogTitle,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport useIsCorrectBoardName from \"./../../hooks/useIsCorrectBoardName\";\r\n\r\nfunction AddBoardModal({ open, handleClose, createBoard, boards }) {\r\n  const [value, setValue] = useState(\"\");\r\n  const handleInput = e => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleCreateBoard = boardName => {\r\n    createBoard(boardName);\r\n    handleClose();\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleClose} fullWidth={true} maxWidth=\"sm\">\r\n      <DialogTitle>Nowa tablica</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>Podaj nazwę nowej tablicy</DialogContentText>\r\n        <TextField\r\n          autoComplete=\"off\"\r\n          error={!useIsCorrectBoardName(boards, value)}\r\n          value={value}\r\n          onChange={e => handleInput(e)}\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          fullWidth\r\n          helperText={\r\n            useIsCorrectBoardName(boards, value)\r\n              ? null\r\n              : \"nieprawidłowa nazwa tablicy\"\r\n          }\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          disabled={!useIsCorrectBoardName(boards, value) || value.length === 0}\r\n          onClick={() => handleCreateBoard(value)}\r\n          color=\"primary\"\r\n        >\r\n          Dodaj\r\n        </Button>\r\n        <Button onClick={handleClose} color=\"secondary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    boards: state.AppReducer.boards\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { createBoard })(AddBoardModal);\r\n","export function deleteBoard(boardName) {\r\n  return {\r\n    type: \"DELETE_BOARD\",\r\n    payload: boardName\r\n  };\r\n}\r\n\r\nexport function changeBoardName(name, newName) {\r\n  return {\r\n    type: \"CHANGE_BOARD_NAME\",\r\n    payload: {\r\n      name,\r\n      newName\r\n    }\r\n  };\r\n}\r\n\r\nexport function createBoard(name) {\r\n  return {\r\n    type: \"ADD_BOARD\",\r\n    payload: name\r\n  };\r\n}\r\n\r\nexport function createTask(boardName, id, title, type, description) {\r\n  return {\r\n    type: \"CREATE_TASK\",\r\n    payload: {\r\n      boardName,\r\n      id,\r\n      title,\r\n      type,\r\n      description\r\n    }\r\n  };\r\n}\r\n\r\nexport function deleteTask(boardName, id) {\r\n  return {\r\n    type: \"DELETE_TASK\",\r\n    payload: {\r\n      boardName,\r\n      id\r\n    }\r\n  };\r\n}\r\n\r\nexport function editTask(boardName, id, title, description) {\r\n  return {\r\n    type: \"EDIT_TASK\",\r\n    payload: {\r\n      boardName,\r\n      id,\r\n      title,\r\n      description\r\n    }\r\n  };\r\n}\r\n\r\nexport function changeTypeTask(boardName, id, type) {\r\n  return {\r\n    type: \"CHANGE_TYPE_TASK\",\r\n    payload: {\r\n      boardName,\r\n      id,\r\n      type\r\n    }\r\n  };\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { AppContext } from \"../contexts/AppContext\";\r\nimport BoardCardContainer from \"./../components/board/BoardCardContainer\";\r\nimport NotificationBar from \"../components/feedback/NotificationBar\";\r\nimport { Grid, Fab, Card, CardHeader } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddBoardModal from \"../components/board/AddBoardModal\";\r\nimport BoardCardContextProvider from \"../contexts/BoardCardContext\";\r\nimport { deleteBoard, changeBoardName } from \"../redux/actions/actions\";\r\nimport useCalculateSpacing from \"../hooks/useCalculateSpacing\";\r\n\r\nfunction BoardsView({ boards, deleteBoard, changeBoardName }) {\r\n  const [isOpenModal, setIsOpenModal] = useState(false);\r\n  const [notificationBarState, setNotificationBarState] = useState(false);\r\n  const [notificationBarMessage, setNotificationBarMessage] = useState(\"\");\r\n  const appContext = useContext(AppContext);\r\n  const { setNavbarTitle } = appContext;\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => setNavbarTitle(\"Wszystkie tablice\"), []);\r\n\r\n  const handleOpenModal = () => {\r\n    setIsOpenModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setIsOpenModal(false);\r\n  };\r\n  const openNotificationBarStateBoard = () => {\r\n    setNotificationBarState(true);\r\n  };\r\n\r\n  const closeNotificationBarState = () => {\r\n    setNotificationBarState(false);\r\n  };\r\n\r\n  const handleNotificationBarMessageBoard = message =>\r\n    setNotificationBarMessage(message);\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={useCalculateSpacing()}>\r\n        {boards.length ? (\r\n          boards.map(board => {\r\n            return (\r\n              <BoardCardContextProvider\r\n                key={board.name}\r\n                value={{\r\n                  ...board,\r\n                  openNotificationBarStateBoard,\r\n                  handleNotificationBarMessageBoard,\r\n                  deleteBoard,\r\n                  changeBoardName\r\n                }}\r\n              >\r\n                <Grid item xs={12} md={6} lg={4} className={classes.card_mb}>\r\n                  <BoardCardContainer />\r\n                </Grid>\r\n              </BoardCardContextProvider>\r\n            );\r\n          })\r\n        ) : (\r\n          <Card className={classes.emptyBoard}>\r\n            <CardHeader title=\"Brak tablic\" />\r\n          </Card>\r\n        )}\r\n      </Grid>\r\n      <Fab\r\n        onClick={handleOpenModal}\r\n        color=\"primary\"\r\n        aria-label=\"otwórz okno do dodawania tablic\"\r\n        className={classes.fab}\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n      <AddBoardModal open={isOpenModal} handleClose={handleCloseModal} />\r\n      <NotificationBar\r\n        notificationBarMessage={notificationBarMessage}\r\n        state={notificationBarState}\r\n        closeFn={closeNotificationBarState}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    boards: state.AppReducer.boards\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { deleteBoard, changeBoardName })(BoardsView)\r\n);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card_mb: {\r\n    marginBottom: theme.spacing(4),\r\n    \"&:last-child\": {\r\n      marginBottom: \"50px\"\r\n    }\r\n  },\r\n  fab: {\r\n    position: \"fixed\",\r\n    bottom: \"20px\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\"\r\n  },\r\n  emptyBoard: {\r\n    width: \"100%\",\r\n    backgroundColor: \"#212121\",\r\n    color: \"#ffffff\"\r\n  }\r\n}));\r\n","import React, { useContext } from \"react\";\r\nimport { TaskViewContext } from \"../../contexts/TaskViewContext\";\r\nimport { AppBar, Tabs, Tab, makeStyles } from \"@material-ui/core\";\r\n\r\nexport default function TypeTabsNavbar() {\r\n  const taskViewContext = useContext(TaskViewContext);\r\n  const classes = useStyles();\r\n  const { tabIndex, handleChangeIndex } = taskViewContext;\r\n\r\n  return (\r\n    <AppBar className={classes.appBar}>\r\n      <Tabs\r\n        value={tabIndex}\r\n        onChange={handleChangeIndex}\r\n        variant=\"fullWidth\"\r\n        aria-label=\"menu do przełączania stanu zadan\"\r\n      >\r\n        <Tab label=\"w trakcie\" {...a11yProps(0)} />\r\n        <Tab label=\"Do zrobienia\" {...a11yProps(1)} />\r\n        <Tab label=\"Zrobione\" {...a11yProps(2)} />\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    bottom: \"0\",\r\n    top: \"auto\"\r\n  }\r\n}));\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`\r\n  };\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Card, CardContent, TextField, Button } from \"@material-ui/core\";\r\nimport { TaskViewContext } from \"./../../contexts/TaskViewContext\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default function EditTaskCard({\r\n  title,\r\n  description,\r\n  editTask,\r\n  closeEditForm,\r\n  id\r\n}) {\r\n  const taskViewContext = useContext(TaskViewContext);\r\n  const { boardName } = taskViewContext;\r\n  const classes = useStyles();\r\n  const [titleInput, setTitleInput] = useState(title);\r\n  const [descriptionInput, setDescriptionInput] = useState(description);\r\n  const handleForm = e => {\r\n    e.preventDefault();\r\n  };\r\n  const handleTitleInput = e => {\r\n    setTitleInput(e.target.value);\r\n  };\r\n  const handleDescriptionInput = e => {\r\n    setDescriptionInput(e.target.value);\r\n  };\r\n\r\n  const handleConfirmTaskChange = () => {\r\n    editTask(boardName, id, titleInput, descriptionInput);\r\n    closeEditForm();\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <form className={classes.form} onChange={handleForm}>\r\n          <TextField\r\n            fullWidth\r\n            autoFocus={true}\r\n            value={titleInput}\r\n            className={classes.textField}\r\n            onChange={e => handleTitleInput(e)}\r\n          />\r\n          <TextareaAutosize\r\n            className={classes.textArea}\r\n            rows={3}\r\n            rowsMax={6}\r\n            aria-label=\"maximum height\"\r\n            value={descriptionInput}\r\n            onChange={e => handleDescriptionInput(e)}\r\n          />\r\n        </form>\r\n        <Button\r\n          onClick={handleConfirmTaskChange}\r\n          className={classes.confirmButton + \" \" + classes.button}\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n          color=\"inherit\"\r\n          startIcon={<CheckIcon />}\r\n        >\r\n          potwierdź\r\n        </Button>\r\n        <Button\r\n          onClick={closeEditForm}\r\n          className={classes.cancelButton + \" \" + classes.button}\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n          color=\"inherit\"\r\n          startIcon={<ClearIcon />}\r\n        >\r\n          anuluj\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    backgroundColor: \"#212121\",\r\n    color: \"#ffffff\",\r\n    marginBottom: \"32px\",\r\n    \"&:last-child\": {\r\n      marginBottom: \"95px\"\r\n    }\r\n  },\r\n  textArea: {\r\n    width: \"100%\",\r\n    marginTop: \"20px\",\r\n    padding: \"10px\",\r\n    marginBottom: \"30px\"\r\n  },\r\n  textField: {\r\n    padding: \"10px\",\r\n    backgroundColor: \"#ffffff\"\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n    color: \"#ffffff\"\r\n  },\r\n  cancelButton: {\r\n    backgroundColor: \"#C2185B\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#C2185B\"\r\n    }\r\n  },\r\n  confirmButton: {\r\n    backgroundColor: \"#00796B\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#00796B\"\r\n    }\r\n  }\r\n}));\r\n","import React, { useState, useContext } from \"react\";\r\nimport { TaskViewContext } from \"./../../contexts/TaskViewContext\";\r\nimport { Button, Menu, MenuItem, makeStyles } from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\n\r\nexport default function({ openEditForm, openAlert, type, id, changeTypeTask }) {\r\n  const taskViewContext = useContext(TaskViewContext);\r\n  const {\r\n    openNotificationBarState,\r\n    handleNotificationBarMessage,\r\n    boardName\r\n  } = taskViewContext;\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChangeTypeTask = (boardName, id, type) => {\r\n    changeTypeTask(boardName, id, type);\r\n    handleClose();\r\n    handleNotificationBarMessage(\"przeniesiono zadanie\");\r\n    openNotificationBarState();\r\n  };\r\n\r\n  const options = {\r\n    inProgress: [\r\n      { type: \"todo\", text: \"do zrobienia\" },\r\n      { type: \"done\", text: \"zrobione\" }\r\n    ],\r\n    todo: [\r\n      { type: \"inProgress\", text: \"w trakcie\" },\r\n      { type: \"done\", text: \"zrobione\" }\r\n    ],\r\n    done: [\r\n      { type: \"inProgress\", text: \"w trakcie\" },\r\n      { type: \"todo\", text: \"do zrobienia\" }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div className={classes.buttonGroups}>\r\n      <Button\r\n        onClick={openAlert}\r\n        className={classes.deleteButton + \" \" + classes.button}\r\n        variant=\"contained\"\r\n        size=\"small\"\r\n        color=\"inherit\"\r\n        startIcon={<DeleteIcon />}\r\n      >\r\n        usun\r\n      </Button>\r\n      <Button\r\n        onClick={openEditForm}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        className={classes.editButton + \" \" + classes.button}\r\n        startIcon={<EditIcon />}\r\n      >\r\n        Edytuj\r\n      </Button>\r\n      <Button\r\n        onClick={handleClick}\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        size=\"small\"\r\n        className={classes.statusButton + \" \" + classes.button}\r\n        aria-controls=\"simple-menu\"\r\n        aria-haspopup=\"true\"\r\n        endIcon={<ArrowDropDownIcon />}\r\n      >\r\n        status\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem\r\n          onClick={() =>\r\n            handleChangeTypeTask(boardName, id, options[type][0].type)\r\n          }\r\n        >\r\n          {options[type][0].text}\r\n        </MenuItem>\r\n        <MenuItem\r\n          onClick={() =>\r\n            handleChangeTypeTask(boardName, id, options[type][1].type)\r\n          }\r\n        >\r\n          {options[type][1].text}\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n    color: \"#ffffff\"\r\n  },\r\n  buttonGroups: {\r\n    marginTop: \"16px\"\r\n  },\r\n  deleteButton: {\r\n    backgroundColor: \"#C2185B\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#C2185B\"\r\n    }\r\n  },\r\n  editButton: {\r\n    backgroundColor: \"#303F9F\"\r\n  },\r\n  statusButton: {\r\n    backgroundColor: \"#00796B\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#00796B\"\r\n    }\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\nimport TaskCardAction from \"./TaskCardAction\";\r\n\r\nexport default function TaskCard({\r\n  title,\r\n  description,\r\n  openEditForm,\r\n  openAlert,\r\n  type,\r\n  id,\r\n  changeTypeTask\r\n}) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardHeader title={title} />\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {description}\r\n        </Typography>\r\n        <TaskCardAction\r\n          openEditForm={openEditForm}\r\n          openAlert={openAlert}\r\n          type={type}\r\n          id={id}\r\n          changeTypeTask={changeTypeTask}\r\n        />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    backgroundColor: \"#212121\",\r\n    color: \"#ffffff\",\r\n    marginBottom: \"32px\"\r\n  },\r\n  cardContent: {\r\n    paddingTop: \"0\",\r\n    color: \"#dedede\"\r\n  }\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport EditTaskCard from \"./EditTaskCard\";\r\nimport TaskCard from \"./TaskCard\";\r\nimport DeleteAlert from \"./../alerts/DeleteAlert\";\r\nimport {\r\n  deleteTask,\r\n  editTask,\r\n  changeTypeTask\r\n} from \"./../../redux/actions/actions\";\r\n\r\nfunction TaskCardContainer({\r\n  deleteTask,\r\n  editTask,\r\n  changeTypeTask,\r\n  title,\r\n  description,\r\n  id,\r\n  type\r\n}) {\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [alert, setAlert] = useState(false);\r\n  const openEditForm = () => setIsEdit(true);\r\n  const closeEditForm = () => setIsEdit(false);\r\n  const closeAlert = () => setAlert(false);\r\n  const openAlert = () => setAlert(true);\r\n\r\n  return (\r\n    <>\r\n      {isEdit ? (\r\n        <EditTaskCard\r\n          title={title}\r\n          description={description}\r\n          closeEditForm={closeEditForm}\r\n          id={id}\r\n          editTask={editTask}\r\n        />\r\n      ) : (\r\n        <>\r\n          <TaskCard\r\n            title={title}\r\n            description={description}\r\n            openEditForm={openEditForm}\r\n            openAlert={openAlert}\r\n            type={type}\r\n            id={id}\r\n            changeTypeTask={changeTypeTask}\r\n          />\r\n          <DeleteAlert\r\n            alertState={alert}\r\n            openAlert={openAlert}\r\n            closeAlert={closeAlert}\r\n            deleteTask={deleteTask}\r\n            id={id}\r\n            dialogTitle=\"Czy na pewno chcesz usunać zadanie\"\r\n            dialogContetText={title}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(null, {\r\n  deleteTask,\r\n  editTask,\r\n  changeTypeTask\r\n})(TaskCardContainer);\r\n","import React from \"react\";\r\nimport { Card, CardContent, CardHeader, makeStyles } from \"@material-ui/core\";\r\n\r\nexport default function TaskCardEmpty() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <CardHeader title=\"brak zadań\" />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    backgroundColor: \"#212121\",\r\n    color: \"#ffffff\",\r\n    marginBottom: \"32px\",\r\n    \"&:last-child\": {\r\n      marginBottom: \"95px\"\r\n    }\r\n  }\r\n}));\r\n","import React, { useContext } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { TaskViewContext } from \"../../contexts/TaskViewContext\";\r\nimport TaskCardContainer from \"./TaskCardContainer\";\r\nimport { Typography, Box, Grid, makeStyles } from \"@material-ui/core\";\r\nimport TaskCardEmpty from \"./TaskCardEmpty\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport useCalculateSpacing from \"../../hooks/useCalculateSpacing\";\r\n\r\nfunction TypePanel() {\r\n  const theme = useTheme();\r\n  const taskViewContext = useContext(TaskViewContext);\r\n  const { tabIndex, inProgressTasks, toDoTasks, doneTasks } = taskViewContext;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <TabPanel value={tabIndex} index={0} dir={theme.direction}>\r\n        <Grid container spacing={useCalculateSpacing()} className={classes.mb}>\r\n          {inProgressTasks.length > 0 ? (\r\n            inProgressTasks.map(task => (\r\n              <Grid item xs={12} md={6} lg={4} key={task.id}>\r\n                <TaskCardContainer {...task} />\r\n              </Grid>\r\n            ))\r\n          ) : (\r\n            <Grid item xs={12}>\r\n              <TaskCardEmpty />\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </TabPanel>\r\n      <TabPanel value={tabIndex} index={1} dir={theme.direction}>\r\n        <Grid container spacing={useCalculateSpacing()} className={classes.mb}>\r\n          {toDoTasks.length > 0 ? (\r\n            toDoTasks.map(task => (\r\n              <Grid item xs={12} md={6} lg={4} key={task.id}>\r\n                <TaskCardContainer {...task} />\r\n              </Grid>\r\n            ))\r\n          ) : (\r\n            <Grid item xs={12}>\r\n              <TaskCardEmpty />\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </TabPanel>\r\n      <TabPanel value={tabIndex} index={2} dir={theme.direction}>\r\n        <Grid container spacing={useCalculateSpacing()} className={classes.mb}>\r\n          {doneTasks.length > 0 ? (\r\n            doneTasks.map(task => (\r\n              <Grid item xs={12} md={6} lg={4} key={task.id}>\r\n                <TaskCardContainer {...task} />\r\n              </Grid>\r\n            ))\r\n          ) : (\r\n            <Grid item xs={12}>\r\n              <TaskCardEmpty />\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </TabPanel>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    boards: state.AppReducer.boards\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TypePanel);\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      <Box>{children}</Box>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  mb: {\r\n    marginBottom: \"55px\"\r\n  }\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Dialog,\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Slide,\r\n  TextField,\r\n  DialogContent,\r\n  DialogContentText,\r\n  FormControl,\r\n  FormLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  useMediaQuery,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { createTask } from \"../../redux/actions/actions\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport useSetUniqueId from \"../../hooks/useSetUniqueId\";\r\n\r\nfunction AddTaskModal({\r\n  openState,\r\n  close,\r\n  createTask,\r\n  boardName,\r\n  currentTasks,\r\n  openNotificationBarState,\r\n  handleNotificationBarMessage,\r\n  tabIndex\r\n}) {\r\n  const breakPoint = useMediaQuery(\"(min-width:1280px)\");\r\n  const classes = useStyles();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [radioValue, setRadioValue] = useState(\"inProgress\");\r\n\r\n  const setCurrentPanel = () => {\r\n    if (tabIndex === 0) {\r\n      setRadioValue(\"inProgress\");\r\n    }\r\n    if (tabIndex === 1) {\r\n      setRadioValue(\"todo\");\r\n    }\r\n    if (tabIndex === 2) {\r\n      setRadioValue(\"done\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCurrentPanel();\r\n  }, [tabIndex]);\r\n\r\n  const handleChange = event => {\r\n    setRadioValue(event.target.value);\r\n  };\r\n  const handleAddTask = () => {\r\n    createTask(\r\n      boardName,\r\n      useSetUniqueId(currentTasks),\r\n      title,\r\n      radioValue,\r\n      description\r\n    );\r\n    close();\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n    handleNotificationBarMessage(\"dodano zadanie\");\r\n    openNotificationBarState();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullScreen\r\n      fullWidth\r\n      open={openState}\r\n      onClose={close}\r\n      TransitionComponent={Transition}\r\n      className={classes.dialog}\r\n      style={{ left: \"auto\" }}\r\n    >\r\n      <AppBar className={classes.appBar}>\r\n        <Toolbar>\r\n          <Grid container alignItems=\"center\" justify=\"space-between\">\r\n            <Typography>Dodaj zadanie</Typography>\r\n            <IconButton color=\"inherit\" onClick={close} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <DialogContent className={classes.dialogContent}>\r\n        <DialogContentText>Tytuł zadania</DialogContentText>\r\n        <TextField\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          fullWidth\r\n          value={title}\r\n          onChange={e => setTitle(e.target.value)}\r\n        />\r\n\r\n        <DialogContentText className={classes.description}>\r\n          Opis zadania\r\n        </DialogContentText>\r\n        <TextareaAutosize\r\n          className={classes.textArea}\r\n          rows={breakPoint ? 8 : 5}\r\n          rowsMax={breakPoint ? 8 : 6}\r\n          aria-label=\"maximum height\"\r\n          value={description}\r\n          onChange={e => setDescription(e.target.value)}\r\n          autoComplete=\"off\"\r\n        />\r\n        <FormControl className={classes.formControl}>\r\n          <FormLabel component=\"legend\">Status zadania</FormLabel>\r\n          <RadioGroup\r\n            aria-label=\"gender\"\r\n            name=\"gender1\"\r\n            className={classes.raddioGroup}\r\n            value={radioValue}\r\n            onChange={handleChange}\r\n          >\r\n            <FormControlLabel\r\n              value=\"inProgress\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"w trakcie\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"todo\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"do zrobienia\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"done\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"zrobione\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n        <div className={classes.btnGtoup}>\r\n          <Button\r\n            disabled={title.length && description.length > 0 ? false : true}\r\n            onClick={handleAddTask}\r\n            color=\"primary\"\r\n          >\r\n            Dodaj\r\n          </Button>\r\n          <Button onClick={close} color=\"secondary\">\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default connect(null, { createTask })(AddTaskModal);\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  dialog: {\r\n    maxWidth: \"600px\",\r\n    width: \"100%\"\r\n  },\r\n  appBar: {\r\n    position: \"relative\"\r\n  },\r\n  dialogContent: {\r\n    marginTop: \"50px\"\r\n  },\r\n  description: {\r\n    marginTop: \"50px\"\r\n  },\r\n  textArea: {\r\n    border: \"2px solid #a9a9a9\",\r\n    padding: \"10px\",\r\n    marginBottom: \"30px\",\r\n    width: \"100%\"\r\n  },\r\n  formControl: {\r\n    marginTop: \"25px\",\r\n    width: \"100%\"\r\n  },\r\n  raddioGroup: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\"\r\n  },\r\n  btnGtoup: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    marginTop: \"10px\"\r\n  }\r\n}));\r\n","export default function useSetUniqueId(tasksArr) {\r\n  let id;\r\n  if (tasksArr.length > 0) {\r\n    id = Math.max(...tasksArr.map(item => item.id));\r\n    id++;\r\n  } else {\r\n    id = 0;\r\n  }\r\n  return id;\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { AppContext } from \"../contexts/AppContext\";\r\nimport TaskViewContextProvider from \"../contexts/TaskViewContext\";\r\nimport TypeTabsNavbar from \"../components/task/TypeTabsNavbar\";\r\nimport TypePanel from \"../components/task/TypePanel\";\r\nimport AddTaskModal from \"../components/task/AddTaskModal\";\r\nimport { Fab, makeStyles } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport NotificationBar from \"./../components/feedback/NotificationBar\";\r\n\r\nfunction TaskView({ boardName, boards }) {\r\n  const classes = useStyles();\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [notificationBarState, setNotificationBarState] = useState(false);\r\n  const [notificationBarMessage, setNotificationBarMessage] = useState(\"\");\r\n  const appContext = useContext(AppContext);\r\n  const { setNavbarTitle } = appContext;\r\n  useEffect(() => setNavbarTitle(boardName));\r\n  const handleClickOpen = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n  const handleChangeIndex = (event, newValue) => {\r\n    setTabIndex(newValue);\r\n  };\r\n\r\n  const openNotificationBarState = () => setNotificationBarState(true);\r\n  const closeNotificationBarState = () => setNotificationBarState(false);\r\n  const handleNotificationBarMessage = message =>\r\n    setNotificationBarMessage(message);\r\n\r\n  const currentBoard = boards.filter(board => board.name === boardName);\r\n\r\n  const filterTypeTask = type => {\r\n    if (currentBoard.length > 0) {\r\n      return currentBoard[0].tasks.filter(task => task.type === type);\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TaskViewContextProvider\r\n      value={{\r\n        tabIndex,\r\n        handleChangeIndex,\r\n        boardName,\r\n        inProgressTasks: filterTypeTask(\"inProgress\"),\r\n        toDoTasks: filterTypeTask(\"todo\"),\r\n        doneTasks: filterTypeTask(\"done\"),\r\n        openNotificationBarState,\r\n        handleNotificationBarMessage\r\n      }}\r\n    >\r\n      <TypeTabsNavbar />\r\n      <TypePanel />\r\n      <Fab\r\n        onClick={handleClickOpen}\r\n        color=\"primary\"\r\n        aria-label=\"add\"\r\n        className={classes.fab}\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n      <AddTaskModal\r\n        close={handleClose}\r\n        openState={isModalOpen}\r\n        boardName={boardName}\r\n        openNotificationBarState={openNotificationBarState}\r\n        handleNotificationBarMessage={handleNotificationBarMessage}\r\n        currentTasks={currentBoard.length > 0 ? currentBoard[0].tasks : []}\r\n        tabIndex={tabIndex}\r\n      />\r\n      <NotificationBar\r\n        notificationBarMessage={notificationBarMessage}\r\n        state={notificationBarState}\r\n        closeFn={closeNotificationBarState}\r\n      />\r\n    </TaskViewContextProvider>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    boards: state.AppReducer.boards\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TaskView);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  fab: {\r\n    position: \"fixed\",\r\n    bottom: \"85px\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\"\r\n  }\r\n}));\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport TaskView from \"./TaskView\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass TaskViewContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      boardName: \"\",\r\n      boardTasks: [],\r\n      isCorrectBorder: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState(state => ({\r\n      boardName: this.props.match.params.name,\r\n      boards: this.props.boards\r\n    }));\r\n    this.findBoard();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.match.params.name !== prevProps.match.params.name) {\r\n      this.setState(state => ({\r\n        boardName: this.props.match.params.name\r\n      }));\r\n      this.findBoard();\r\n    }\r\n  }\r\n\r\n  findBoard() {\r\n    const board = this.props.boards.filter(\r\n      board => board.name === this.props.match.params.name\r\n    );\r\n\r\n    if (board.length > 0) {\r\n      this.setState(state => ({\r\n        boardTasks: board[0].tasks\r\n      }));\r\n    } else {\r\n      this.setState(state => ({\r\n        boardTasks: [],\r\n        isCorrectBorder: false\r\n      }));\r\n    }\r\n  }\r\n\r\n  filterTypeTask(type) {\r\n    return this.state.boardTasks.filter(task => task.type === type);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isCorrectBorder === false) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return <TaskView boardName={this.state.boardName} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    boards: state.AppReducer.boards\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(TaskViewContainer));\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { AppContext } from \"./../contexts/AppContext\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  makeStyles,\r\n  List,\r\n  ListItem,\r\n  Box\r\n} from \"@material-ui/core\";\r\n\r\nexport default function InfoView() {\r\n  const appContext = useContext(AppContext);\r\n  const { setNavbarTitle } = appContext;\r\n  const classes = useStyles();\r\n  useEffect(() => setNavbarTitle(\"Informacje\"));\r\n\r\n  return (\r\n    <Box className={classes.box}>\r\n      <Paper className={classes.paper}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          Działanie aplikacji\r\n        </Typography>\r\n        <List>\r\n          <ListItem className={classes.ListItem}>\r\n            Aplikacja służy do tworzenia tablic typu Kanban\r\n          </ListItem>\r\n          <ListItem className={classes.ListItem}>\r\n            Strona główna to widok wszystkich dostępnych tablic, klikając na\r\n            daną tablice , przechodzimy do szczegółowego widoku tablicy gdzie\r\n            widoczne są zadania\r\n          </ListItem>\r\n          <ListItem className={classes.ListItem}>\r\n            Zadania mogę mieć jeden z trzech statusów ( w trakcie , do zrobienia\r\n            , zrobione)\r\n          </ListItem>\r\n          <ListItem className={classes.ListItem}>\r\n            Do zmiany statusu zadania służy button status\r\n          </ListItem>\r\n          <ListItem className={classes.ListItem}>\r\n            Klikając w lupe pokazuje się widok wyszukiwarki tablic\r\n          </ListItem>\r\n        </List>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          Użyte technologie :\r\n        </Typography>\r\n        <List>\r\n          <ListItem className={classes.ListItem}>React</ListItem>\r\n          <ListItem className={classes.ListItem}>Redux</ListItem>\r\n          <ListItem className={classes.ListItem}>Material-UI</ListItem>\r\n          <ListItem className={classes.ListItem}>React Router</ListItem>\r\n        </List>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    padding: \"16px 10px\",\r\n    backgroundColor: \"#212121\",\r\n    color: \"#ffffff\",\r\n    marginBottom: \"35px\"\r\n  },\r\n  ListItem: {\r\n    paddingLeft: \"0px\",\r\n    paddingRight: \"0px\",\r\n    color: \"#dedede\"\r\n  },\r\n  box: {\r\n    maxWidth: \"650px\",\r\n    margin: \"auto\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginTop: \"70px\"\r\n    }\r\n  }\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport ErrorView from \"./views/ErrorView\";\r\nimport Main from \"./components/layout/Main\";\r\nimport AppContextProvider from \"./contexts/AppContext\";\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport Search from \"./components/layout/Search\";\r\nimport BoardsView from \"./views/BoardsView\";\r\nimport TaskViewContainer from \"./views/TaskViewContainer\";\r\nimport InfoView from \"./views/InfoView\";\r\n\r\nfunction App({ boards }) {\r\n  const [isOpenSearch, setIsOpenSearch] = useState(false);\r\n  const [navbarTitle, setNavbarTitle] = useState(\"\");\r\n\r\n  return (\r\n    <HashRouter>\r\n      <AppContextProvider value={{ navbarTitle, setNavbarTitle }}>\r\n        <Navbar setIsOpenSearch={setIsOpenSearch} />\r\n        <Main>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={BoardsView} />\r\n            <Route exact path=\"/tablice/:name\" component={TaskViewContainer} />\r\n            <Route exact path=\"/informacje\" component={InfoView} />\r\n            <Route component={ErrorView} />\r\n          </Switch>\r\n        </Main>\r\n        <Search\r\n          setIsOpenSearch={setIsOpenSearch}\r\n          isOpenSearch={isOpenSearch}\r\n          boards={boards}\r\n        />\r\n      </AppContextProvider>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    boards: state.AppReducer.boards\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","const testState = {\r\n  boards: [\r\n    {\r\n      name: \"React Kanban App\",\r\n      tasks: [\r\n        {\r\n          id: 0,\r\n          title: \"Material UI\",\r\n          type: \"inProgress\",\r\n          description: \"Dodać do aplikacji Material UI\"\r\n        },\r\n        {\r\n          id: 1,\r\n          title: \"Backend\",\r\n          type: \"todo\",\r\n          description: \"firebase\"\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"Animacje\",\r\n          type: \"todo\",\r\n          description: \"Płynne przejścia między stronami\"\r\n        },\r\n        {\r\n          id: 3,\r\n          title: \"Filtrowanie zadań\",\r\n          type: \"todo\",\r\n          description:\r\n            \"Dodać filtrowanie dla zadań alfabetycznie , najnowsze, najstarsze\"\r\n        },\r\n        {\r\n          id: 4,\r\n          title: \"Redux\",\r\n          type: \"inProgress\",\r\n          description: \"Dodać redux do zarządzania stanem aplikacj\"\r\n        },\r\n        {\r\n          id: 5,\r\n          title: \"Testowanie\",\r\n          type: \"todo\",\r\n          description: \"Enzyme\"\r\n        },\r\n        {\r\n          id: 6,\r\n          title: \"podstawowa funkcjonalność\",\r\n          type: \"done\",\r\n          description: \"dodawanie , usuwanie , edytowanie ,przenoszenie zadan\"\r\n        },\r\n        {\r\n          id: 7,\r\n          title: \"Optymalizacja wydajności\",\r\n          type: \"todo\",\r\n          description: \"Dodać techiniki , przyspieszające działanie aplikacji\"\r\n        },\r\n        {\r\n          id: 8,\r\n          title: \"Wyszukiwanie zadan\",\r\n          type: \"done\",\r\n          description: \"Przy pustym inpucie pokazuje wszystie tablice\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: \"Countries app\",\r\n      tasks: [\r\n        {\r\n          id: 0,\r\n          title: \"Styled components\",\r\n          type: \"inProgress\",\r\n          description: \"Dodać do aplikacji styled components\"\r\n        },\r\n        {\r\n          id: 1,\r\n          title: \"Paginacja\",\r\n          type: \"todo\",\r\n          description:\r\n            \"Dodać paginację żeby nie renderować wszyskich krajów na jednej stronie\"\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"Sortowanie\",\r\n          type: \"done\",\r\n          description: \"alfabetycznie, populacja, powierchnia \"\r\n        },\r\n        {\r\n          id: 3,\r\n          title: \"Zapisywanie krajów\",\r\n          type: \"done\",\r\n          description: \"Kliknięcie w gwiazdke zapisuje kraj w local storage \"\r\n        },\r\n        {\r\n          id: 4,\r\n          title: \"Testowanie\",\r\n          type: \"todo\",\r\n          description: \"Enzyme\"\r\n        },\r\n        {\r\n          id: 5,\r\n          title: \"Stan aplikacji\",\r\n          type: \"done\",\r\n          description: \"Zarządzanie stanem za pomocą react hooks\"\r\n        },\r\n        {\r\n          id: 6,\r\n          title: \"Pobieranie krajów\",\r\n          type: \"inProgress\",\r\n          description: \"Pobieranie krajów z api przy użyciu biblioteki axios\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: \"Strona portfolio\",\r\n      tasks: [\r\n        {\r\n          id: 0,\r\n          title: \"Parcel js\",\r\n          type: \"inProgress\",\r\n          description: \"Zbudowac stronę przy użyciu parcel js\"\r\n        },\r\n        {\r\n          id: 1,\r\n          title: \"Menu\",\r\n          type: \"todo\",\r\n          description: \"Menu przy scrolowaniu zmienia position na fixed\"\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"Github pages\",\r\n          type: \"todo\",\r\n          description: \"opublikować stronę na github pages\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n};\r\n\r\nexport default function(state = testState, action) {\r\n  switch (action.type) {\r\n    case \"ADD_BOARD\":\r\n      return {\r\n        boards: [\r\n          ...state.boards,\r\n          {\r\n            name: action.payload,\r\n            tasks: []\r\n          }\r\n        ]\r\n      };\r\n    case \"DELETE_BOARD\":\r\n      return {\r\n        boards: state.boards.filter(board => board.name !== action.payload)\r\n      };\r\n    case \"CHANGE_BOARD_NAME\":\r\n      return {\r\n        boards: state.boards.map(board => {\r\n          if (board.name === action.payload.name) {\r\n            return { ...board, name: action.payload.newName };\r\n          }\r\n\r\n          return board;\r\n        })\r\n      };\r\n    case \"CREATE_TASK\":\r\n      return {\r\n        boards: state.boards.map(board => {\r\n          if (board.name === action.payload.boardName) {\r\n            return {\r\n              ...board,\r\n              tasks: [\r\n                ...board.tasks,\r\n                {\r\n                  id: action.payload.id,\r\n                  title: action.payload.title,\r\n                  type: action.payload.type,\r\n                  description: action.payload.description\r\n                }\r\n              ]\r\n            };\r\n          }\r\n          return board;\r\n        })\r\n      };\r\n    case \"DELETE_TASK\":\r\n      return {\r\n        boards: state.boards.map(board => {\r\n          if (board.name === action.payload.boardName) {\r\n            return {\r\n              name: action.payload.boardName,\r\n              tasks: board.tasks.filter(task => task.id !== action.payload.id)\r\n            };\r\n          }\r\n          return board;\r\n        })\r\n      };\r\n    case \"EDIT_TASK\":\r\n      return {\r\n        boards: state.boards.map(board => {\r\n          if (board.name === action.payload.boardName) {\r\n            return {\r\n              name: action.payload.boardName,\r\n              tasks: board.tasks.map(task => {\r\n                if (task.id === action.payload.id) {\r\n                  return {\r\n                    ...task,\r\n                    title: action.payload.title,\r\n                    description: action.payload.description\r\n                  };\r\n                }\r\n                return task;\r\n              })\r\n            };\r\n          }\r\n          return board;\r\n        })\r\n      };\r\n    case \"CHANGE_TYPE_TASK\":\r\n      return {\r\n        boards: state.boards.map(board => {\r\n          if (board.name === action.payload.boardName) {\r\n            return {\r\n              name: action.payload.boardName,\r\n              tasks: board.tasks.map(task => {\r\n                if (task.id === action.payload.id) {\r\n                  return {\r\n                    ...task,\r\n                    type: action.payload.type\r\n                  };\r\n                }\r\n                return task;\r\n              })\r\n            };\r\n          }\r\n          return board;\r\n        })\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\nexport default combineReducers({ AppReducer });\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nexport default createStore(rootReducer);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./styles/index.scss\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}