{"version":3,"sources":["components/Tasks/ListTasks/EditTask/EditTask.module.scss","components/Search/Search.module.scss","components/Tasks/ListTasks/Task/OptionsView/OptionsView.module.scss","components/Tasks/ListTasks/Task/OnlyViewTask.module.scss","assets/icon/search.svg","components/Main/Main.module.scss","components/buttons/closeButton/CloseButton.module.scss","assets/icon/close.svg","redux/actions/actions.js","components/Tasks/ListTasks/Task/OptionsView/OptionsView.js","context.js","components/Tasks/ListTasks/EditTask/EditTask.js","components/Tasks/ListTasks/Task/Task.js","components/Tasks/ListTasks/ListTasks.js","hooks/useFilterTypeTask.js","views/ToDoView/ToDoView.js","views/DoingView/DoingView.js","views/DoneView/DoneView.js","views/ErrorView/ErrorView.js","components/Menu/Menu.js","components/Main/Main.js","components/Tasks/ListTasks/Task/OnlyViewTask.js","components/buttons/closeButton/CloseButton.js","components/AddTask/AddTask.js","hooks/useSetUniqueId.js","hooks/useCompare.js","components/Search/Search.js","App.js","redux/reducers/tasksReducer.js","redux/reducers/layout.js","redux/reducers/rootReducer.js","redux/store.js","index.js","components/Menu/Menu.module.scss","components/AddTask/AddTask.module.scss","components/Tasks/ListTasks/Task/Task.module.scss"],"names":["module","exports","editTitle","editDescription","editBtn","cancelBtn","wrapper","searchForm","tasks","options","appear","layer","task","title","__webpack_require__","p","btnClose","toggleIsOptionsView","id","type","payload","connect","deleteTask","editTask","changeTypeTask","_ref","react_default","a","createElement","Fragment","className","styles","onClick","AppContext","React","createContext","EditTask","state","_this","props","description","handleInput","e","setState","Object","defineProperty","target","name","value","handleCancel","context","cancelEditTaskFn","_this2","this","onChange","style","confirmTask","canceEditTask","Component","contextType","isOptionsView","isEdit","mb","join","box","ListTasks_EditTask_EditTask","Task_OptionsView_OptionsView","dots","dot","ListTasks","length","map","ListTasks_Task_Task","assign","key","useFilterTypeTask","taskType","filter","withRouter","tasksReducer","Tasks_ListTasks_ListTasks","ErrorView","Menu","openAddModalFn","openSearchdModalFn","list","NavLink","exact","to","activeClassName","linkActive","link","btn","searchTxt","src","searchIcon","alt","Main","children","OnlyViewTask","CloseButton","closeFn","closeIcon","types","todo","doing","done","Modal","validAlert","handleForm","preventDefault","handleType","handleAddTaskBtn","_this$state","tasksArr","Math","max","apply","toConsumableArray","item","useSetUniqueId","createTask","closeAddModal","showLastTask","sort","order","arguments","undefined","b","comparison","useCompare","onSubmit","placeholder","radioWrapper","checked","btnAdd","lastTasks","slice","window","innerWidth","el","Task_OnlyViewTask","closeButton_CloseButton","closeSearchModal","isFound","_useState","useState","_useState2","slicedToArray","inputTxt","setInputTxt","toUpperCase","indexOf","push","isAddModalOpen","layout","isSearcModalhOpen","openAddModal","openSearchdModal","HashRouter","components_Menu_Menu","components_Main_Main","Switch","Route","path","component","ToDoView","DoingView","DoneView","AddTask","components_Search_Search","initialState","combineReducers","action","objectSpread","concat","createStore","rootReducer","ReactDOM","render","es","store","src_App","document","getElementById","searchList","search"],"mappings":"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","file":"static/js/main.4f4a8386.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"editTitle\":\"EditTask_editTitle__3Ern_\",\"editDescription\":\"EditTask_editDescription__3EJ2A\",\"editBtn\":\"EditTask_editBtn__hoWZH\",\"cancelBtn\":\"EditTask_cancelBtn__1bnBj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Search_wrapper__3Dzb4\",\"searchForm\":\"Search_searchForm__2nZEu\",\"tasks\":\"Search_tasks__1rJDj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"OptionsView_options__3kXiu\",\"appear\":\"OptionsView_appear__g1iYe\",\"layer\":\"OptionsView_layer__GZCWQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"OnlyViewTask_task__24N3e\",\"title\":\"OnlyViewTask_title__1Ct93\"};","module.exports = __webpack_public_path__ + \"static/media/search.85aeb9e3.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Main_wrapper__2zCij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnClose\":\"CloseButton_btnClose__1F_1A\"};","module.exports = __webpack_public_path__ + \"static/media/close.ddc2583a.svg\";","export function openAddModal() {\r\n  return {\r\n    type: \"OPEN_ADD_MODAL\"\r\n  };\r\n}\r\n\r\nexport function closeAddModal() {\r\n  return {\r\n    type: \"CLOSE_ADD_MODAL\"\r\n  };\r\n}\r\n\r\nexport function openSearchdModal() {\r\n  return {\r\n    type: \"OPEN_SEARCH_MODAL\"\r\n  };\r\n}\r\n\r\nexport function closeSearchModal() {\r\n  return {\r\n    type: \"CLOSE_SEARCH_MODAL\"\r\n  };\r\n}\r\n\r\nexport function toggleIsOptionsView(id) {\r\n  return {\r\n    type: \"TOGGLE_OPTION_VIEW\",\r\n    payload: id\r\n  };\r\n}\r\n\r\nexport function deleteTask(id) {\r\n  return {\r\n    type: \"DELETE_TASK\",\r\n    payload: id\r\n  };\r\n}\r\n\r\nexport function editTask(id) {\r\n  return {\r\n    type: \"EDIT_TASK\",\r\n    payload: id\r\n  };\r\n}\r\n\r\nexport function confirmTask(id, title, description) {\r\n  return {\r\n    type: \"CONFIRM_TASK\",\r\n    payload: {\r\n      id,\r\n      title,\r\n      description\r\n    }\r\n  };\r\n}\r\n\r\nexport function canceEditTask(id) {\r\n  return {\r\n    type: \"CANCEL_EDIT_TASK\",\r\n    payload: id\r\n  };\r\n}\r\n\r\nexport function changeTypeTask(id, type) {\r\n  return {\r\n    type: \"CHANGE_TYPE_TASK\",\r\n    payload: {\r\n      id,\r\n      type\r\n    }\r\n  };\r\n}\r\n\r\nexport function createTask(id, title, type, description) {\r\n  return {\r\n    type: \"CREATE_TASK\",\r\n    payload: {\r\n      id,\r\n      title,\r\n      type,\r\n      description\r\n    }\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./OptionsView.module.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  toggleIsOptionsView,\r\n  deleteTask,\r\n  editTask,\r\n  changeTypeTask\r\n} from \"./../../../../../redux/actions/actions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst OptionsView = ({\r\n  id,\r\n  type,\r\n  toggleIsOptionsView,\r\n  deleteTask,\r\n  editTask,\r\n  changeTypeTask\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className={styles.options}>\r\n        <ul>\r\n          <li>\r\n            <button onClick={() => deleteTask(id)}>usun</button>\r\n          </li>\r\n          <li>\r\n            <button onClick={() => editTask(id)}>edytuj</button>\r\n          </li>\r\n          {type === \"todo\" ? (\r\n            <>\r\n              <li>\r\n                <button onClick={() => changeTypeTask(id, \"doing\")}>\r\n                  w trakcie\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button onClick={() => changeTypeTask(id, \"done\")}>\r\n                  zrobiono\r\n                </button>\r\n              </li>\r\n            </>\r\n          ) : null}\r\n          {type === \"doing\" ? (\r\n            <>\r\n              <li>\r\n                <button onClick={() => changeTypeTask(id, \"todo\")}>\r\n                  do zrobienia\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button onClick={() => changeTypeTask(id, \"done\")}>\r\n                  zrobiono\r\n                </button>\r\n              </li>\r\n            </>\r\n          ) : null}\r\n          {type === \"done\" ? (\r\n            <>\r\n              <li>\r\n                <button onClick={() => changeTypeTask(id, \"doing\")}>\r\n                  w trakcie\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button onClick={() => changeTypeTask(id, \"todo\")}>\r\n                  do zrobienia\r\n                </button>\r\n              </li>\r\n            </>\r\n          ) : null}\r\n        </ul>\r\n      </div>\r\n      <div className={styles.layer} onClick={() => toggleIsOptionsView(id)} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { toggleIsOptionsView, deleteTask, editTask, changeTypeTask }\r\n)(OptionsView);\r\n\r\nOptionsView.propTypes = {\r\n  id: PropTypes.number,\r\n  type: PropTypes.string,\r\n  toggleIsOptionsView: PropTypes.func,\r\n  deleteTask: PropTypes.func,\r\n  editTask: PropTypes.func,\r\n  changeTypeTask: PropTypes.func\r\n};\r\n","import React from \"react\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport default AppContext;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport AppContext from \"./../../../../context\";\r\nimport style from \"./EditTask.module.scss\";\r\nimport {\r\n  confirmTask,\r\n  canceEditTask\r\n} from \"./../../../../redux/actions/actions\";\r\n\r\nclass EditTask extends Component {\r\n  state = {\r\n    title: this.props.title,\r\n    description: this.props.description\r\n  };\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      title: this.props.title,\r\n      description: this.props.description\r\n    });\r\n    this.context.cancelEditTaskFn(this.props.id);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={this.state.title}\r\n          onChange={this.handleInput}\r\n          className={style.editTitle}\r\n        />\r\n        <textarea\r\n          name=\"description\"\r\n          type=\"text\"\r\n          onChange={this.handleInput}\r\n          value={this.state.description}\r\n          className={style.editDescription}\r\n        />\r\n        <button\r\n          onClick={() =>\r\n            this.props.confirmTask(\r\n              this.props.id,\r\n              this.state.title,\r\n              this.state.description\r\n            )\r\n          }\r\n          className={style.editBtn}\r\n        >\r\n          zatwierdz\r\n        </button>\r\n        <button\r\n          onClick={() => this.props.canceEditTask(this.props.id)}\r\n          className={style.cancelBtn}\r\n        >\r\n          anuluj\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEditTask.contextType = AppContext;\r\n\r\nexport default connect(\r\n  null,\r\n  { confirmTask, canceEditTask }\r\n)(EditTask);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./Task.module.scss\";\r\nimport OptionsView from \"./OptionsView/OptionsView\";\r\nimport EditTask from \"./../EditTask/EditTask\";\r\nimport { toggleIsOptionsView } from \"./../../../../redux/actions/actions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Task = ({\r\n  title,\r\n  id,\r\n  type,\r\n  isOptionsView,\r\n  isEdit,\r\n  description,\r\n  toggleIsOptionsView\r\n}) => {\r\n  return (\r\n    <li className={[\"col-12\", \"col-m-6\", \"col-xl-4\", styles.mb].join(\" \")}>\r\n      <div className={styles.box}>\r\n        <>\r\n          {isEdit ? (\r\n            <EditTask id={id} title={title} description={description} />\r\n          ) : (\r\n            <div>\r\n              <h2 className={styles.title}>{title}</h2>\r\n              <p>{description}</p>\r\n            </div>\r\n          )}\r\n          {isOptionsView && (\r\n            <OptionsView id={id} type={type} isOptionsView={isOptionsView} />\r\n          )}\r\n          <div className={styles.dots}>\r\n            <button onClick={() => toggleIsOptionsView(id)}>\r\n              <span className={styles.dot} />\r\n              <span className={styles.dot} />\r\n              <span className={styles.dot} />\r\n            </button>\r\n          </div>\r\n        </>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nTask.propTypes = {\r\n  title: PropTypes.string,\r\n  id: PropTypes.number,\r\n  type: PropTypes.string,\r\n  isOptionsView: PropTypes.bool,\r\n  isEdit: PropTypes.bool,\r\n  description: PropTypes.string,\r\n  toggleIsOptionsView: PropTypes.func\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { toggleIsOptionsView }\r\n)(Task);\r\n","import React from \"react\";\r\nimport Task from \"./Task/Task\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ListTasks = ({ tasks }) => {\r\n  return (\r\n    <>\r\n      {tasks.length ? (\r\n        <ul className=\"row\">\r\n          {tasks.map(task => {\r\n            return <Task key={task.id} {...task} />;\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <p>Tabilca jest pusta dodaj cos</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nListTasks.propTypes = {\r\n  tasks: PropTypes.array\r\n};\r\n\r\nexport default ListTasks;\r\n","export default function useFilterTypeTask(tasks, taskType) {\r\n  return tasks.filter(task => task.type === taskType);\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ListTasks from \"./../../components/Tasks/ListTasks/ListTasks\";\r\nimport useFilterTypeTask from \"./../../hooks/useFilterTypeTask\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ToDoView({ tasks }) {\r\n  return <ListTasks tasks={useFilterTypeTask(tasks, \"todo\")} />;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tasks: state.tasksReducer.tasks\r\n  };\r\n};\r\n\r\nToDoView.propTypes = {\r\n  tasks: PropTypes.array\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(ToDoView));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ListTasks from \"./../../components/Tasks/ListTasks/ListTasks\";\r\nimport useFilterTypeTask from \"./../../hooks/useFilterTypeTask\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction DoingView({ tasks }) {\r\n  return <ListTasks tasks={useFilterTypeTask(tasks, \"doing\")} />;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tasks: state.tasksReducer.tasks\r\n  };\r\n};\r\n\r\nDoingView.propTypes = {\r\n  tasks: PropTypes.array\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(DoingView));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ListTasks from \"./../../components/Tasks/ListTasks/ListTasks\";\r\nimport useFilterTypeTask from \"./../../hooks/useFilterTypeTask\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction DoneView({ tasks }) {\r\n  return <ListTasks tasks={useFilterTypeTask(tasks, \"done\")} />;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tasks: state.tasksReducer.tasks\r\n  };\r\n};\r\n\r\nDoneView.propTypes = {\r\n  tasks: PropTypes.array\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(DoneView));\r\n","import React from \"react\";\r\n\r\nconst ErrorView = () => {\r\n  return <p>Podana strona nie istnieje </p>;\r\n};\r\n\r\nexport default ErrorView;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Menu.module.scss\";\r\nimport searchIcon from \"./../../assets/icon/search.svg\";\r\n\r\nconst Menu = ({ openAddModalFn, openSearchdModalFn }) => {\r\n  return (\r\n    <header className={styles.wrapper}>\r\n      <nav className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-m-12\">\r\n            <ul className={styles.list}>\r\n              <li>\r\n                <NavLink\r\n                  exact\r\n                  to=\"/\"\r\n                  activeClassName={styles.linkActive}\r\n                  className={styles.link}\r\n                >\r\n                  do zrobienia\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink\r\n                  exact\r\n                  to=\"/doing\"\r\n                  activeClassName={styles.linkActive}\r\n                  className={styles.link}\r\n                >\r\n                  w trakcie\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink\r\n                  exact\r\n                  to=\"/done\"\r\n                  activeClassName={styles.linkActive}\r\n                  className={styles.link}\r\n                >\r\n                  zrobione\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <button onClick={openAddModalFn} className={styles.btn}>\r\n                  dodaj\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button onClick={openSearchdModalFn} className=\"\">\r\n                  <span className={styles.searchTxt}>szukaj</span>\r\n                  <img\r\n                    src={searchIcon}\r\n                    alt=\"search icon\"\r\n                    className={styles.searchIcon}\r\n                  />\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nMenu.propTypes = {\r\n  openAddModalFn: PropTypes.func,\r\n  openSearchdModalFn: PropTypes.func\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport styles from \"./Main.module.scss\";\r\n\r\nconst Main = ({ children }) => {\r\n  return (\r\n    <main className={styles.wrapper}>\r\n      <div className=\"container\">{children}</div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport styles from \"./OnlyViewTask.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst OnlyViewTask = ({ title, type }) => {\r\n  return (\r\n    <div className=\"col-12 col-m-6\">\r\n      <div className={styles.task}>\r\n        <p className={styles.title}>{title}</p>\r\n        <p>status: {type}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nOnlyViewTask.propTypes = {\r\n  title: PropTypes.string,\r\n  type: PropTypes.string\r\n};\r\n\r\nexport default OnlyViewTask;\r\n","import React from \"react\";\r\nimport styles from \"./CloseButton.module.scss\";\r\nimport closeIcon from \"./../../../assets/icon/close.svg\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CloseButton = ({ closeFn }) => {\r\n  return (\r\n    <button onClick={closeFn} className={styles.btnClose}>\r\n      <img src={closeIcon} alt=\"ikona zamykania\" />\r\n    </button>\r\n  );\r\n};\r\n\r\nCloseButton.propTypes = {\r\n  tasks: PropTypes.func\r\n};\r\n\r\nexport default CloseButton;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport OnlyViewTask from \"./../../components/Tasks/ListTasks/Task/OnlyViewTask\";\r\nimport styles from \"./AddTask.module.scss\";\r\nimport CloseButton from \"./../buttons/closeButton/CloseButton\";\r\nimport useSetUniqueId from \"./../../hooks/useSetUniqueId\";\r\nimport { createTask, closeAddModal } from \"./../../redux/actions/actions\";\r\nimport useCompare from \"./../../hooks/useCompare\";\r\n\r\nconst types = {\r\n  todo: \"todo\",\r\n  doing: \"doing\",\r\n  done: \"done\"\r\n};\r\n\r\nclass Modal extends Component {\r\n  state = {\r\n    type: types.todo,\r\n    title: \"\",\r\n    description: \"\",\r\n    validAlert: false\r\n  };\r\n\r\n  handleForm = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleType = type => {\r\n    this.setState({\r\n      type\r\n    });\r\n  };\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleAddTaskBtn = () => {\r\n    const { title, type, description } = this.state;\r\n    if (title !== \"\" && type !== \"\" && description !== \"\") {\r\n      const id = useSetUniqueId(this.props.tasks);\r\n      this.props.createTask(id, title, type, description);\r\n      this.props.closeAddModal();\r\n    } else {\r\n      this.setState({\r\n        validAlert: true\r\n      });\r\n    }\r\n  };\r\n\r\n  showLastTask = () => {\r\n    const arr = [...this.props.tasks];\r\n    return arr.sort(useCompare(\"id\", \"MAX\"));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className={styles.wrapper}>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-m-12 col-xl-6\">\r\n                <div className=\"row\">\r\n                  <h2 className=\"col-12 col-m-12\">Dodaj zadanie</h2>\r\n                  <div className=\"col-12 col-m-12\">\r\n                    <form onSubmit={this.handleForm}>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        placeholder=\"wpisz tytul zadania\"\r\n                        onChange={this.handleInput}\r\n                        value={this.state.title}\r\n                        className={styles.searchForm}\r\n                      />\r\n                      <br />\r\n                      <textarea\r\n                        type=\"text\"\r\n                        name=\"description\"\r\n                        placeholder=\"wpisz opis\"\r\n                        onChange={this.handleInput}\r\n                        value={this.state.description}\r\n                        className={styles.searchForm}\r\n                      />\r\n\r\n                      <div className={styles.options}>\r\n                        <p className=\"col-m-12\">Status zadania</p>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-12 col-m-4\">\r\n                            <div className={styles.radioWrapper}>\r\n                              <label>\r\n                                <span>do zrobienia</span>\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  checked={this.state.type === types.todo}\r\n                                  onChange={() => this.handleType(types.todo)}\r\n                                />\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-12 col-m-4\">\r\n                            <div className={styles.radioWrapper}>\r\n                              <label>\r\n                                <span>w trakcie</span>\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  checked={this.state.type === types.doing}\r\n                                  onChange={() => this.handleType(types.doing)}\r\n                                />\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-12 col-m-4\">\r\n                            <div className={styles.radioWrapper}>\r\n                              <label>\r\n                                <span>zrobione</span>\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  checked={this.state.type === types.done}\r\n                                  onChange={() => this.handleType(types.done)}\r\n                                />\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-m-12\">\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={this.handleAddTaskBtn}\r\n                          className={styles.btnAdd}\r\n                        >\r\n                          dodaj\r\n                        </button>\r\n                      </div>\r\n                      {this.state.validAlert && (\r\n                        <p>wszystkie pola musza byc wypelnione</p>\r\n                      )}\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className={[\"col-m-12, col-xl-6\", styles.lastTasks].join(\" \")}\r\n              >\r\n                <div className=\"row\">\r\n                  <h2 className=\"col-m-12\">Ostatnio dodane zadania</h2>\r\n                  {this.showLastTask()\r\n                    // jezeli szerokosc urządzenia wieksza niz 1100px to wyswietl 6 taskow\r\n                    .slice(0, window.innerWidth > 1100 ? 6 : 4)\r\n                    .map(el => {\r\n                      return <OnlyViewTask key={el.id} {...el} />;\r\n                    })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <CloseButton closeFn={this.props.closeAddModal} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  closeAddModal: PropTypes.func,\r\n  createTask: PropTypes.func,\r\n  tasks: PropTypes.array\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tasks: state.tasksReducer.tasks\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { closeAddModal, createTask }\r\n)(Modal);\r\n","export default function useSetUniqueId(tasksArr) {\r\n  let id;\r\n  if (tasksArr.length > 0) {\r\n    id = Math.max(...tasksArr.map(item => item.id));\r\n    id++;\r\n  } else {\r\n    id = 0;\r\n  }\r\n  return id;\r\n}\r\n","export default function useCompare(value, order = \"MIN\") {\r\n  return function(a, b) {\r\n    let comparison = 0;\r\n    a = a[value];\r\n    b = b[value];\r\n    if (a > b) {\r\n      comparison = 1;\r\n    } else if (a < b) {\r\n      comparison = -1;\r\n    }\r\n    if (order === \"MAX\") {\r\n      return comparison * -1;\r\n    }\r\n    return comparison;\r\n  };\r\n}\r\n\r\n// value czyli np sortuj po id albo title\r\n// oder min / max\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { closeSearchModal } from \"./../../redux/actions/actions\";\r\nimport OnlyViewTask from \"./../../components/Tasks/ListTasks/Task/OnlyViewTask\";\r\nimport styles from \"./Search.module.scss\";\r\nimport CloseButton from \"./../../components/buttons/closeButton/CloseButton\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Search = ({ closeSearchModal, tasks }) => {\r\n  let isFound = [];\r\n  const [inputTxt, setInputTxt] = useState(\"\");\r\n  const getInput = e => {\r\n    setInputTxt(e.target.value);\r\n  };\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className=\"container\">\r\n        <div className=\"col-m-12\">\r\n          <input\r\n            type=\"text\"\r\n            onChange={getInput}\r\n            className={styles.searchForm}\r\n            placeholder=\"wpisz tytul zadania\"\r\n          />\r\n        </div>\r\n\r\n        <div className={styles.tasks}>\r\n          <div className=\"row\">\r\n            {tasks.map(task => {\r\n              if (\r\n                task.title.toUpperCase().indexOf(inputTxt.toUpperCase()) > -1\r\n              ) {\r\n                isFound.push(true);\r\n                return <OnlyViewTask key={task.id} {...task} />;\r\n              } else {\r\n                isFound.push(false);\r\n              }\r\n              return null;\r\n            })}\r\n            {isFound.indexOf(true) > -1 ? null : (\r\n              <p className=\"col-m-6\">nic nie znaleziono</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <CloseButton closeFn={closeSearchModal} />\r\n    </div>\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  tasks: PropTypes.array,\r\n  closeSearchModal: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tasks: state.tasksReducer.tasks\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { closeSearchModal }\r\n)(Search);\r\n","import React from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport ToDoView from \"./views/ToDoView/ToDoView\";\r\nimport DoingView from \"./views/DoingView/DoingView\";\r\nimport DoneView from \"./views/DoneView/DoneView\";\r\nimport ErrorView from \"./views/ErrorView/ErrorView\";\r\nimport Menu from \"./components/Menu/Menu\";\r\nimport Main from \"./components/Main/Main\";\r\nimport { openAddModal, openSearchdModal } from \"./redux/actions/actions\";\r\nimport AddTask from \"./components/AddTask/AddTask\";\r\nimport Search from \"./components/Search/Search\";\r\n\r\nfunction App({\r\n  isAddModalOpen,\r\n  openAddModal,\r\n  openSearchdModal,\r\n  isSearcModalhOpen\r\n}) {\r\n  return (\r\n    <HashRouter>\r\n      <>\r\n        <Menu\r\n          openAddModalFn={openAddModal}\r\n          openSearchdModalFn={openSearchdModal}\r\n        />\r\n        <Main>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={ToDoView} />\r\n            <Route path=\"/doing\" component={DoingView} />\r\n            <Route path=\"/done\" component={DoneView} />\r\n            <Route component={ErrorView} />\r\n          </Switch>\r\n        </Main>\r\n        {isAddModalOpen && <AddTask />}\r\n        {isSearcModalhOpen && <Search />}\r\n      </>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAddModalOpen: state.layout.isAddModalOpen,\r\n    isSearcModalhOpen: state.layout.isSearcModalhOpen\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { openAddModal, openSearchdModal }\r\n)(App);\r\n","const initialState = {\r\n  tasks: [\r\n    {\r\n      id: 0,\r\n      title: \"Stylowanie komponetów\",\r\n      type: \"todo\",\r\n      description: \"Dodać do aplikacji Semanitic UI / styled components\",\r\n      isEdit: false,\r\n      isOptionsView: false\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"Data utworzenia\",\r\n      type: \"todo\",\r\n      description: \"Dodać do każdego zadania date utworzenia\",\r\n      isEdit: false,\r\n      isOptionsView: false\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Filtrowanie zadań\",\r\n      type: \"todo\",\r\n      description:\r\n        \"Dodać filtrowanie dla zadań alfabetycznie , najnowsze, najstarsze\",\r\n      isEdit: false,\r\n      isOptionsView: false\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Animacje\",\r\n      type: \"todo\",\r\n      description: \"Dodać animacje przejścia między stronami\",\r\n      isEdit: false,\r\n      isOptionsView: false\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Refaktoryzacja kodu\",\r\n      type: \"doing\",\r\n      description:\r\n        \"Podzielić aplikację na więcej komponentów wielokrotnego użytku\",\r\n      isEdit: false,\r\n      isOptionsView: false\r\n    },\r\n    {\r\n      id: 5,\r\n      title: \"Firebase\",\r\n      type: \"todo\",\r\n      description:\r\n        \"Zintegrować aplikację z Firebase , aby była możliwosć utworzenia konta i zapisywania tablic na serwerze\",\r\n      isEdit: false,\r\n      isOptionsView: false\r\n    },\r\n    {\r\n      id: 6,\r\n      title: \"Priorytetowe zadania\",\r\n      type: \"todo\",\r\n      description: \"wyswietlaja sie jako pierwsze i mają inny kolor\",\r\n      isEdit: false,\r\n      isOptionsView: false\r\n    },\r\n    {\r\n      id: 7,\r\n      title: \"podstawowa funkcjonalność\",\r\n      type: \"done\",\r\n      description: \"dodawanie , usuwanie , edytowanie ,przenoszenie zadan\",\r\n      isEdit: false,\r\n      isOptionsView: false\r\n    },\r\n    {\r\n      id: 8,\r\n      title: \"Redux\",\r\n      type: \"doing\",\r\n      description: \"Dodać redux do zarządzania stanem aplikacji\",\r\n      isEdit: false,\r\n      isOptionsView: false\r\n    },\r\n    {\r\n      id: 9,\r\n      title: \"Optymalizacja wydajności\",\r\n      type: \"todo\",\r\n      description: \"Dodać techiniki , przyspieszające działanie aplikacji\",\r\n      isEdit: false,\r\n      isOptionsView: false\r\n    }\r\n  ]\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"TOGGLE_OPTION_VIEW\":\r\n      return {\r\n        tasks: state.tasks.map(task => {\r\n          if (task.id === action.payload) {\r\n            return { ...task, isOptionsView: !task.isOptionsView };\r\n          }\r\n          return task;\r\n        })\r\n      };\r\n    case \"DELETE_TASK\":\r\n      return {\r\n        tasks: state.tasks.filter(task => task.id !== action.payload)\r\n      };\r\n    case \"EDIT_TASK\":\r\n      return {\r\n        tasks: state.tasks.map(task => {\r\n          if (task.id === action.payload) {\r\n            return { ...task, isEdit: true, isOptionsView: false };\r\n          }\r\n          return task;\r\n        })\r\n      };\r\n    case \"CONFIRM_TASK\":\r\n      return {\r\n        tasks: state.tasks.map(task => {\r\n          if (task.id === action.payload.id) {\r\n            return {\r\n              ...task,\r\n              isEdit: false,\r\n              description: action.payload.description,\r\n              title: action.payload.title\r\n            };\r\n          }\r\n          return task;\r\n        })\r\n      };\r\n    case \"CANCEL_EDIT_TASK\":\r\n      return {\r\n        tasks: state.tasks.map(task => {\r\n          if (task.id === action.payload) {\r\n            return {\r\n              ...task,\r\n              isEdit: false\r\n            };\r\n          }\r\n          return task;\r\n        })\r\n      };\r\n    case \"CHANGE_TYPE_TASK\":\r\n      return {\r\n        tasks: state.tasks.map(task => {\r\n          if (task.id === action.payload.id) {\r\n            return {\r\n              ...task,\r\n              type: action.payload.type,\r\n              isOptionsView: false\r\n            };\r\n          }\r\n          return task;\r\n        })\r\n      };\r\n    case \"CREATE_TASK\":\r\n      return {\r\n        tasks: [\r\n          ...state.tasks,\r\n          {\r\n            id: action.payload.id,\r\n            title: action.payload.title,\r\n            type: action.payload.type,\r\n            description: action.payload.description,\r\n            isEdit: false,\r\n            isOptionsView: false\r\n          }\r\n        ]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  isAddModalOpen: false,\r\n  isSearcModalhOpen: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"OPEN_ADD_MODAL\":\r\n      return {\r\n        ...state,\r\n        isAddModalOpen: true\r\n      };\r\n    case \"CLOSE_ADD_MODAL\":\r\n      return {\r\n        ...state,\r\n        isAddModalOpen: false\r\n      };\r\n    case \"OPEN_SEARCH_MODAL\":\r\n      return {\r\n        ...state,\r\n        isSearcModalhOpen: true\r\n      };\r\n    case \"CLOSE_SEARCH_MODAL\":\r\n      return {\r\n        ...state,\r\n        isSearcModalhOpen: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport tasksReducer from \"./tasksReducer\";\r\nimport layout from \"./layout\";\r\n\r\nexport default combineReducers({ tasksReducer, layout });\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nexport default createStore(rootReducer);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./styles/index.scss\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Menu_wrapper__1XxAc\",\"list\":\"Menu_list__1IhGb\",\"link\":\"Menu_link__3O6qD\",\"linkActive\":\"Menu_linkActive__2nQ-n\",\"searchList\":\"Menu_searchList__LhfzS\",\"search\":\"Menu_search__3rdAT\",\"searchIcon\":\"Menu_searchIcon__1yDhC\",\"searchTxt\":\"Menu_searchTxt__3C4Bf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddTask_wrapper__ZHdL2\",\"lastTasks\":\"AddTask_lastTasks__2BA90\",\"btnAdd\":\"AddTask_btnAdd__3Pqti\",\"searchForm\":\"AddTask_searchForm__Zc5eR\",\"options\":\"AddTask_options__2pgzG\",\"radioWrapper\":\"AddTask_radioWrapper__2CRoZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Task_box__3jkO5\",\"dots\":\"Task_dots__3nuz9\",\"dot\":\"Task_dot__2na-A\",\"title\":\"Task_title__2JJbE\",\"mb\":\"Task_mb__2L-DQ\"};"],"sourceRoot":""}