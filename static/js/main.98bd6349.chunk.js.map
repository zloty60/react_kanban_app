{"version":3,"sources":["components/Menu/Menu.module.scss","components/AddTask/AddTask.module.scss","components/Tasks/ListTasks/Task/Task.module.scss","components/Tasks/ListTasks/EditTask/EditTask.module.scss","components/Search/Search.module.scss","components/Tasks/ListTasks/Task/OptionsView/OptionsView.module.scss","components/Tasks/ListTasks/Task/OnlyViewTask.module.scss","components/Main/Main.module.scss","assets/icon/search.svg","components/buttons/closeButton/CloseButton.module.scss","assets/icon/close.svg","context.js","components/Main/Main.js","components/Menu/Menu.js","components/Tasks/ListTasks/Task/OptionsView/OptionsView.js","components/Tasks/ListTasks/EditTask/EditTask.js","components/Tasks/ListTasks/Task/Task.js","components/Tasks/ListTasks/ListTasks.js","views/DoingView/DoingView.js","views/DoneView/DoneView.js","views/ToDoView/ToDoView.js","views/ErrorView/ErrorView.js","components/Tasks/ListTasks/Task/OnlyViewTask.js","components/buttons/closeButton/CloseButton.js","components/AddTask/AddTask.js","components/Search/Search.js","views/root/App.js","index.js"],"names":["module","exports","wrapper","list","link","linkActive","searchList","search","searchIcon","searchTxt","lastTasks","btnAdd","searchForm","options","radioWrapper","box","dots","dot","title","mb","editTitle","editDescription","editBtn","cancelBtn","tasks","appear","layer","task","__webpack_require__","p","btnClose","AppContext","React","createContext","Main","_ref","children","react_default","a","createElement","className","styles","Menu","openModalFn","openSearchFormFn","NavLink","exact","to","activeClassName","onClick","btn","src","alt","OptionsView","id","type","src_context","Consumer","context","Fragment","deleteTaskFn","changeToEditTaskFn","changeTypeTaskFn","toggleIsOptionsViewFn","EditTask","state","_this","props","description","handleInput","e","setState","Object","defineProperty","target","name","value","handleCancel","cancelEditTaskFn","_this2","this","onChange","style","confirmEditTaskFn","Component","contextType","Task","isOptionsView","isEdit","join","ListTasks_EditTask_EditTask","Task_OptionsView_OptionsView","ListTasks","length","map","ListTasks_Task_Task","assign","key","DoingView","Tasks_ListTasks_ListTasks","filterTypeTaskFn","DoneView","ToDoView","ErrorView","OnlyViewTask","CloseButton","closeFn","closeIcon","types","todo","doing","done","Modal","validAlert","handleForm","preventDefault","handleType","handleBtn","maxId","_this$state","Math","max","apply","toConsumableArray","item","addTaskFn","sortHighestId","sort","b","comparison","onSubmit","placeholder","checked","slice","window","innerWidth","el","Task_OnlyViewTask","closeButton_CloseButton","closeModalFn","Search","handleSearchTxtFn","isFound","toUpperCase","indexOf","push","App","isModalOpen","isFilterOpen","filterTypeTask","typeTask","filter","copyTasksArray","findTaskId","findIndex","openModal","closeModal","openSearchForm","closeSearchForm","deleteTask","index","splice","addTask","arguments","undefined","prevState","concat","changeTypeTask","toggleIsOptionsView","changeToEditTask","confirmEditTask","cancelEditTask","handleSearchTxt","contextElements","HashRouter","Provider","components_Menu_Menu","components_Main_Main","Switch","Route","path","component","AddTask","components_Search_Search","ReactDOM","render","root_App","document","getElementById"],"mappings":"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","file":"static/js/main.98bd6349.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Menu_wrapper__3aUte\",\"list\":\"Menu_list__2bUIC\",\"link\":\"Menu_link__1k1S6\",\"linkActive\":\"Menu_linkActive__44SEq\",\"searchList\":\"Menu_searchList__2HVKA\",\"search\":\"Menu_search__xU90B\",\"searchIcon\":\"Menu_searchIcon__3YDOY\",\"searchTxt\":\"Menu_searchTxt__2rf9_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddTask_wrapper__3yKK4\",\"lastTasks\":\"AddTask_lastTasks__djU5H\",\"btnAdd\":\"AddTask_btnAdd__3uHhj\",\"searchForm\":\"AddTask_searchForm__arPdK\",\"options\":\"AddTask_options__3OoLT\",\"radioWrapper\":\"AddTask_radioWrapper__3qzak\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Task_box__1hGwj\",\"dots\":\"Task_dots__9EguH\",\"dot\":\"Task_dot__1ILmo\",\"title\":\"Task_title__2cUQv\",\"mb\":\"Task_mb__2IJI4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editTitle\":\"EditTask_editTitle__3HNVv\",\"editDescription\":\"EditTask_editDescription__JebI_\",\"editBtn\":\"EditTask_editBtn__ytpdR\",\"cancelBtn\":\"EditTask_cancelBtn__3W-OH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Search_wrapper__sFImZ\",\"searchForm\":\"Search_searchForm__3NyPQ\",\"tasks\":\"Search_tasks__2DD5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"OptionsView_options__2g2CV\",\"appear\":\"OptionsView_appear__bTJw5\",\"layer\":\"OptionsView_layer__30ly8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"OnlyViewTask_task__320Nq\",\"title\":\"OnlyViewTask_title__3YT4u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Main_wrapper__VJBfA\"};","module.exports = __webpack_public_path__ + \"static/media/search.85aeb9e3.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnClose\":\"CloseButton_btnClose__3vw7t\"};","module.exports = __webpack_public_path__ + \"static/media/close.ddc2583a.svg\";","import React from \"react\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport default AppContext;\r\n","import React from \"react\";\r\nimport styles from \"./Main.module.scss\";\r\n\r\nconst Main = ({ children }) => {\r\n  return (\r\n    <main className={styles.wrapper}>\r\n      <div className=\"container\">{children}</div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Menu.module.scss\";\r\nimport searchIcon from \"./../../assets/icon/search.svg\";\r\n\r\nconst Menu = ({ openModalFn, openSearchFormFn }) => {\r\n  return (\r\n    <header className={styles.wrapper}>\r\n      <nav className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-m-12\">\r\n            <ul className={styles.list}>\r\n              <li>\r\n                <NavLink\r\n                  exact\r\n                  to=\"/\"\r\n                  activeClassName={styles.linkActive}\r\n                  className={styles.link}\r\n                >\r\n                  do zrobionia\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink\r\n                  exact\r\n                  to=\"/doing\"\r\n                  activeClassName={styles.linkActive}\r\n                  className={styles.link}\r\n                >\r\n                  w trakcie\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink\r\n                  exact\r\n                  to=\"/done\"\r\n                  activeClassName={styles.linkActive}\r\n                  className={styles.link}\r\n                >\r\n                  zrobione\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <button onClick={openModalFn} className={styles.btn}>\r\n                  dodaj\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button onClick={openSearchFormFn} className=\"\">\r\n                  <span className={styles.searchTxt}>szukaj</span>\r\n                  <img\r\n                    src={searchIcon}\r\n                    alt=\"search icon\"\r\n                    className={styles.searchIcon}\r\n                  />\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nMenu.propTypes = {\r\n  openModalFn: PropTypes.func,\r\n  openSearchFormFn: PropTypes.func\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport AppContext from \"./../../../../../context\";\r\nimport styles from \"./OptionsView.module.scss\";\r\n\r\nconst OptionsView = ({ id, type }) => {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {context => (\r\n        <>\r\n          <div className={styles.options}>\r\n            <ul>\r\n              <li>\r\n                <button onClick={() => context.deleteTaskFn(id)}>usun</button>\r\n              </li>\r\n              <li>\r\n                <button onClick={() => context.changeToEditTaskFn(id)}>\r\n                  edytuj\r\n                </button>\r\n              </li>\r\n              {type === \"todo\" ? (\r\n                <>\r\n                  <li>\r\n                    <button\r\n                      onClick={() => context.changeTypeTaskFn(id, \"doing\")}\r\n                    >\r\n                      w trakcie\r\n                    </button>\r\n                  </li>\r\n                  <li>\r\n                    <button\r\n                      onClick={() => context.changeTypeTaskFn(id, \"done\")}\r\n                    >\r\n                      zrobiono\r\n                    </button>\r\n                  </li>\r\n                </>\r\n              ) : null}\r\n              {type === \"doing\" ? (\r\n                <>\r\n                  <li>\r\n                    <button\r\n                      onClick={() => context.changeTypeTaskFn(id, \"todo\")}\r\n                    >\r\n                      do zrobienia\r\n                    </button>\r\n                  </li>\r\n                  <li>\r\n                    <button\r\n                      onClick={() => context.changeTypeTaskFn(id, \"done\")}\r\n                    >\r\n                      zrobiono\r\n                    </button>\r\n                  </li>\r\n                </>\r\n              ) : null}\r\n              {type === \"done\" ? (\r\n                <>\r\n                  <li>\r\n                    <button\r\n                      onClick={() => context.changeTypeTaskFn(id, \"doing\")}\r\n                    >\r\n                      w trakcie\r\n                    </button>\r\n                  </li>\r\n                  <li>\r\n                    <button\r\n                      onClick={() => context.changeTypeTaskFn(id, \"todo\")}\r\n                    >\r\n                      do zrobienia\r\n                    </button>\r\n                  </li>\r\n                </>\r\n              ) : null}\r\n            </ul>\r\n          </div>\r\n          <div\r\n            className={styles.layer}\r\n            onClick={() => context.toggleIsOptionsViewFn(id)}\r\n          />\r\n        </>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default OptionsView;\r\n","import React, { Component } from \"react\";\r\nimport AppContext from \"./../../../../context\";\r\nimport style from \"./EditTask.module.scss\";\r\n\r\nclass EditTask extends Component {\r\n  state = {\r\n    title: this.props.title,\r\n    description: this.props.description\r\n  };\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      title: this.props.title,\r\n      description: this.props.description\r\n    });\r\n    this.context.cancelEditTaskFn(this.props.id);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={this.state.title}\r\n          onChange={this.handleInput}\r\n          className={style.editTitle}\r\n        />\r\n        <textarea\r\n          name=\"description\"\r\n          type=\"text\"\r\n          onChange={this.handleInput}\r\n          value={this.state.description}\r\n          className={style.editDescription}\r\n        />\r\n        <button\r\n          onClick={() =>\r\n            this.context.confirmEditTaskFn(\r\n              this.props.id,\r\n              this.state.title,\r\n              this.state.description\r\n            )\r\n          }\r\n          className={style.editBtn}\r\n        >\r\n          zatwierdz\r\n        </button>\r\n        <button onClick={this.handleCancel} className={style.cancelBtn}>\r\n          anuluj\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEditTask.contextType = AppContext;\r\n\r\nexport default EditTask;\r\n","import React from \"react\";\r\nimport AppContext from \"./../../../../context\";\r\nimport styles from \"./Task.module.scss\";\r\nimport OptionsView from \"./OptionsView/OptionsView\";\r\nimport EditTask from \"./../EditTask/EditTask\";\r\n\r\nconst Task = ({ title, id, type, isOptionsView, isEdit, description }) => {\r\n  return (\r\n    <li className={[\"col-12\", \"col-m-6\", \"col-xl-4\", styles.mb].join(\" \")}>\r\n      <div className={styles.box}>\r\n        <>\r\n          {isEdit ? (\r\n            <EditTask id={id} title={title} description={description} />\r\n          ) : (\r\n            <div>\r\n              <h2 className={styles.title}>{title}</h2>\r\n              <p>{description}</p>\r\n            </div>\r\n          )}\r\n          {isOptionsView && (\r\n            <OptionsView id={id} type={type} isOptionsView={isOptionsView} />\r\n          )}\r\n          <div className={styles.dots}>\r\n            <AppContext.Consumer>\r\n              {context => (\r\n                <button onClick={() => context.toggleIsOptionsViewFn(id)}>\r\n                  <span className={styles.dot} />\r\n                  <span className={styles.dot} />\r\n                  <span className={styles.dot} />\r\n                </button>\r\n              )}\r\n            </AppContext.Consumer>\r\n          </div>\r\n        </>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task/Task\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ListTasks = ({ tasks }) => {\r\n  return (\r\n    <>\r\n      {tasks.length ? (\r\n        <ul className=\"row\">\r\n          {tasks.map(task => {\r\n            return <Task key={task.id} {...task} />;\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <p>Tabilca jest pusta dodaj cos</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nListTasks.propTypes = {\r\n  tasks: PropTypes.array\r\n};\r\n\r\nexport default ListTasks;\r\n","import React from \"react\";\r\nimport AppContext from \"../../context\";\r\nimport ListTasks from \"./../../components/Tasks/ListTasks/ListTasks\";\r\n\r\nconst DoingView = () => (\r\n  <AppContext.Consumer>\r\n    {context => <ListTasks tasks={context.filterTypeTaskFn(\"doing\")} />}\r\n  </AppContext.Consumer>\r\n);\r\n\r\nexport default DoingView;\r\n","import React from \"react\";\r\nimport AppContext from \"../../context\";\r\nimport ListTasks from \"./../../components/Tasks/ListTasks/ListTasks\";\r\n\r\nconst DoneView = () => (\r\n  <AppContext.Consumer>\r\n    {context => <ListTasks tasks={context.filterTypeTaskFn(\"done\")} />}\r\n  </AppContext.Consumer>\r\n);\r\n\r\nexport default DoneView;\r\n","import React from \"react\";\r\nimport AppContext from \"../../context\";\r\nimport ListTasks from \"./../../components/Tasks/ListTasks/ListTasks\";\r\n\r\nconst ToDoView = () => (\r\n  <AppContext.Consumer>\r\n    {context => <ListTasks tasks={context.filterTypeTaskFn(\"todo\")} />}\r\n  </AppContext.Consumer>\r\n);\r\n\r\nexport default ToDoView;\r\n","import React from \"react\";\r\n\r\nconst ErrorView = () => {\r\n  return <p>Podana strona nie istnieje </p>;\r\n};\r\n\r\nexport default ErrorView;\r\n","import React from \"react\";\r\nimport styles from \"./OnlyViewTask.module.scss\";\r\n\r\nconst OnlyViewTask = ({ title, type }) => {\r\n  return (\r\n    <div className=\"col-12 col-m-6\">\r\n      <div className={styles.task}>\r\n        <p className={styles.title}>{title}</p>\r\n        <p>status: {type}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OnlyViewTask;\r\n","import React from \"react\";\r\nimport styles from \"./CloseButton.module.scss\";\r\nimport closeIcon from \"./../../../assets/icon/close.svg\";\r\n\r\nconst CloseButton = ({ closeFn }) => {\r\n  return (\r\n    <button onClick={closeFn} className={styles.btnClose}>\r\n      <img src={closeIcon} alt=\"ikona zamykania\" />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CloseButton;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport OnlyViewTask from \"./../../components/Tasks/ListTasks/Task/OnlyViewTask\";\r\nimport styles from \"./AddTask.module.scss\";\r\nimport CloseButton from \"./../buttons/closeButton/CloseButton\";\r\n\r\nconst types = {\r\n  todo: \"todo\",\r\n  doing: \"doing\",\r\n  done: \"done\"\r\n};\r\n\r\nclass Modal extends Component {\r\n  state = {\r\n    type: types.todo,\r\n    title: \"\",\r\n    description: \"\",\r\n    validAlert: false\r\n  };\r\n\r\n  handleForm = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleType = type => {\r\n    this.setState({\r\n      type\r\n    });\r\n  };\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleBtn = () => {\r\n    const { title, type, description } = this.state;\r\n    let maxId;\r\n    if (this.props.tasks.length > 0) {\r\n      maxId = Math.max(...this.props.tasks.map(item => item.id));\r\n      maxId++;\r\n    } else {\r\n      maxId = 0;\r\n    }\r\n\r\n    if (title !== \"\" && type !== \"\" && description !== \"\") {\r\n      this.props.addTaskFn(maxId, title, type, description);\r\n    } else {\r\n      this.setState({\r\n        validAlert: true\r\n      });\r\n    }\r\n  };\r\n\r\n  sortHighestId = () => {\r\n    const arr = [...this.props.tasks];\r\n\r\n    function compare(a, b) {\r\n      let comparison = 0;\r\n      a = a.id;\r\n      b = b.id;\r\n      if (a > b) {\r\n        comparison = 1;\r\n      } else if (a < b) {\r\n        comparison = -1;\r\n      }\r\n      return comparison * -1;\r\n    }\r\n    return arr.sort(compare);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className={styles.wrapper}>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-m-12 col-xl-6\">\r\n                <div className=\"row\">\r\n                  <h2 className=\"col-12 col-m-12\">Dodaj zadanie</h2>\r\n                  <div className=\"col-12 col-m-12\">\r\n                    <form onSubmit={this.handleForm}>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        placeholder=\"wpisz tytul zadania\"\r\n                        onChange={this.handleInput}\r\n                        value={this.state.title}\r\n                        className={styles.searchForm}\r\n                      />\r\n                      <br />\r\n                      <textarea\r\n                        type=\"text\"\r\n                        name=\"description\"\r\n                        placeholder=\"wpisz opis\"\r\n                        onChange={this.handleInput}\r\n                        value={this.state.description}\r\n                        className={styles.searchForm}\r\n                      />\r\n\r\n                      <div className={styles.options}>\r\n                        <p className=\"col-m-12\">Status zadania</p>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-12 col-m-4\">\r\n                            <div className={styles.radioWrapper}>\r\n                              <label>\r\n                                <span>do zrobienia</span>\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  checked={this.state.type === types.todo}\r\n                                  onChange={() => this.handleType(types.todo)}\r\n                                />\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-12 col-m-4\">\r\n                            <div className={styles.radioWrapper}>\r\n                              <label>\r\n                                <span>w trakcie</span>\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  checked={this.state.type === types.doing}\r\n                                  onChange={() => this.handleType(types.doing)}\r\n                                />\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-12 col-m-4\">\r\n                            <div className={styles.radioWrapper}>\r\n                              <label>\r\n                                <span>zrobione</span>\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  checked={this.state.type === types.done}\r\n                                  onChange={() => this.handleType(types.done)}\r\n                                />\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-m-12\">\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={this.handleBtn}\r\n                          className={styles.btnAdd}\r\n                        >\r\n                          dodaj\r\n                        </button>\r\n                      </div>\r\n                      {this.state.validAlert && (\r\n                        <p>wszystkie pola musza byc wypelnione</p>\r\n                      )}\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className={[\"col-m-12, col-xl-6\", styles.lastTasks].join(\" \")}\r\n              >\r\n                <div className=\"row\">\r\n                  <h2 className=\"col-m-12\">Ostatnio dodane zadania</h2>\r\n                  {this.sortHighestId()\r\n                    // jezeli szerokosc urządzenia wieksza niz 1100px to wyswietl 6 taskow\r\n                    .slice(0, window.innerWidth > 1100 ? 6 : 4)\r\n                    .map(el => {\r\n                      return <OnlyViewTask key={el.id} {...el} />;\r\n                    })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <CloseButton closeFn={this.props.closeModalFn} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  closeModalFn: PropTypes.func,\r\n  tasks: PropTypes.array,\r\n  addTaskFn: PropTypes.func\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport OnlyViewTask from \"./../../components/Tasks/ListTasks/Task/OnlyViewTask\";\r\nimport styles from \"./Search.module.scss\";\r\nimport CloseButton from \"./../../components/buttons/closeButton/CloseButton\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Search = ({ closeFn, tasks, searchTxt, handleSearchTxtFn }) => {\r\n  let isFound = [];\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className=\"container\">\r\n        <div className=\"col-m-12\">\r\n          <input\r\n            type=\"text\"\r\n            onChange={handleSearchTxtFn}\r\n            className={styles.searchForm}\r\n            placeholder=\"wpisz tytul zadania\"\r\n          />\r\n        </div>\r\n\r\n        <div className={styles.tasks}>\r\n          <div className=\"row\">\r\n            {tasks.map(task => {\r\n              if (\r\n                task.title.toUpperCase().indexOf(searchTxt.toUpperCase()) > -1\r\n              ) {\r\n                isFound.push(true);\r\n                return <OnlyViewTask key={task.id} {...task} />;\r\n              } else {\r\n                isFound.push(false);\r\n              }\r\n              return null;\r\n            })}\r\n            {isFound.indexOf(true) > -1 ? null : (\r\n              <p className=\"col-m-6\">nic nie znaleziono</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <CloseButton closeFn={closeFn} />\r\n    </div>\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  closeFn: PropTypes.func,\r\n  tasks: PropTypes.array,\r\n  handleSearchTxtFn: PropTypes.func\r\n};\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport AppContext from \"../../context\";\nimport Main from \"../../components/Main/Main\";\nimport Menu from \"../../components/Menu/Menu\";\nimport DoingView from \"../DoingView/DoingView\";\nimport DoneView from \"../DoneView/DoneView\";\nimport ToDoView from \"../ToDoView/ToDoView\";\nimport ErrorView from \"../ErrorView/ErrorView\";\nimport AddTask from \"../../components/AddTask/AddTask\";\nimport \"../../styles/index.scss\";\nimport Search from \"./../../components/Search/Search\";\n\nclass App extends Component {\n  state = {\n    tasks: [\n      {\n        id: 0,\n        title: \"Formularz\",\n        type: \"todo\",\n        description: \"Dodać w formularzach w aplikacji walidacje\",\n        isEdit: false,\n        isOptionsView: false\n      },\n      {\n        id: 1,\n        title: \"Data utworzenia\",\n        type: \"todo\",\n        description: \"Dodać do każdego zadania date utworzenia\",\n        isEdit: false,\n        isOptionsView: false\n      },\n      {\n        id: 2,\n        title: \"Filtrowanie zadań\",\n        type: \"todo\",\n        description:\n          \"Dodać filtrowanie dla zadań alfabetycznie , najnowsze, najstarsze\",\n        isEdit: false,\n        isOptionsView: false\n      },\n      {\n        id: 3,\n        title: \"Animacje\",\n        type: \"todo\",\n        description: \"Dodać animacje do apki\",\n        isEdit: false,\n        isOptionsView: false\n      },\n      {\n        id: 4,\n        title: \"Refaktoryzacja kodu\",\n        type: \"doing\",\n        description:\n          \"Podzielić aplikację na więcej komponentów wielokrotnego użytku\",\n        isEdit: false,\n        isOptionsView: false\n      },\n      {\n        id: 5,\n        title: \"Firebase\",\n        type: \"todo\",\n        description:\n          \"Zintegrować aplikację z Firebase aby zadania mogły się zapisywać na serwerze\",\n        isEdit: false,\n        isOptionsView: false\n      },\n      {\n        id: 6,\n        title: \"Priorytetowe zadania\",\n        type: \"todo\",\n        description: \"wyswietlaja sie jako pierwsze i mają inny kolor\",\n        isEdit: false,\n        isOptionsView: false\n      },\n      {\n        id: 7,\n        title: \"podstawowa funkcjonalność\",\n        type: \"done\",\n        description: \"dodawanie , usuwanie , edytowanie ,przenoszenie zadan\",\n        isEdit: false,\n        isOptionsView: false\n      }\n    ],\n    isModalOpen: false,\n    isFilterOpen: false,\n    searchTxt: \"\"\n  };\n\n  filterTypeTask = typeTask => {\n    return this.state.tasks.filter(task => task.type === typeTask);\n  };\n\n  copyTasksArray = () => [...this.state.tasks];\n\n  findTaskId = (id, tasks) => tasks.findIndex(task => task.id === id);\n\n  openModal = () => {\n    this.setState({\n      isModalOpen: true\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      isModalOpen: false\n    });\n  };\n\n  openSearchForm = () => {\n    this.setState({\n      isFilterOpen: true\n    });\n  };\n\n  closeSearchForm = () => {\n    this.setState({\n      isFilterOpen: false,\n      searchTxt: \"\"\n    });\n  };\n\n  deleteTask = id => {\n    const tasks = this.copyTasksArray();\n    const index = this.findTaskId(id, tasks);\n    tasks.splice(index, 1);\n    this.setState({\n      tasks\n    });\n  };\n\n  addTask = (\n    id,\n    title,\n    type,\n    description,\n    isEdit = false,\n    isOptionsView = false\n  ) => {\n    const item = {\n      id,\n      title,\n      type,\n      description,\n      isEdit,\n      isOptionsView\n    };\n    this.setState(prevState => ({\n      tasks: [...prevState.tasks, item]\n    }));\n    this.closeModal();\n  };\n\n  changeTypeTask = (id, type) => {\n    const tasks = this.copyTasksArray();\n    const index = this.findTaskId(id, tasks);\n    tasks[index].type = type;\n    this.setState({\n      tasks\n    });\n    this.toggleIsOptionsView(id);\n  };\n\n  changeToEditTask = id => {\n    const tasks = this.copyTasksArray();\n    const index = this.findTaskId(id, tasks);\n    tasks[index].isEdit = true;\n    this.setState({\n      tasks\n    });\n    this.toggleIsOptionsView(id);\n    return true;\n  };\n\n  confirmEditTask = (id, title, description) => {\n    const tasks = this.copyTasksArray();\n    const index = this.findTaskId(id, tasks);\n    tasks[index].isEdit = false;\n    tasks[index].title = title;\n    tasks[index].description = description;\n    this.setState({\n      tasks\n    });\n  };\n\n  cancelEditTask = id => {\n    const tasks = this.copyTasksArray();\n    const index = this.findTaskId(id, tasks);\n    tasks[index].isEdit = false;\n    this.setState({\n      tasks\n    });\n  };\n\n  toggleIsOptionsView = id => {\n    const tasks = this.copyTasksArray();\n    const index = this.findTaskId(id, tasks);\n    tasks[index].isOptionsView = !this.state.tasks[index].isOptionsView;\n    this.setState({\n      tasks\n    });\n  };\n\n  handleSearchTxt = e => {\n    this.setState({\n      searchTxt: e.target.value\n    });\n  };\n\n  render() {\n    const { isModalOpen, tasks, isFilterOpen, searchTxt } = this.state;\n    const {\n      filterTypeTask,\n      openModal,\n      closeModal,\n      deleteTask,\n      changeTypeTask,\n      changeToEditTask,\n      confirmEditTask,\n      toggleIsOptionsView,\n      openSearchForm,\n      closeSearchForm,\n      cancelEditTask,\n      handleSearchTxt\n    } = this;\n\n    const contextElements = {\n      tasks: tasks,\n      filterTypeTaskFn: filterTypeTask,\n      deleteTaskFn: deleteTask,\n      changeTypeTaskFn: changeTypeTask,\n      changeToEditTaskFn: changeToEditTask,\n      confirmEditTaskFn: confirmEditTask,\n      toggleIsOptionsViewFn: toggleIsOptionsView,\n      cancelEditTaskFn: cancelEditTask,\n      handleSearchTxtFn: handleSearchTxt\n    };\n\n    return (\n      <HashRouter>\n        <AppContext.Provider value={contextElements}>\n          <Menu openModalFn={openModal} openSearchFormFn={openSearchForm} />\n          <Main>\n            <Switch>\n              <Route exact path=\"/\" component={ToDoView} />\n              <Route path=\"/doing\" component={DoingView} />\n              <Route path=\"/done\" component={DoneView} />\n              <Route component={ErrorView} />\n            </Switch>\n          </Main>\n          {isModalOpen && (\n            <AddTask\n              closeModalFn={closeModal}\n              tasks={tasks}\n              addTaskFn={this.addTask}\n            />\n          )}\n          {isFilterOpen && (\n            <Search\n              closeFn={closeSearchForm}\n              tasks={tasks}\n              searchTxt={searchTxt}\n              handleSearchTxtFn={handleSearchTxt}\n            />\n          )}\n        </AppContext.Provider>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./views/root/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}